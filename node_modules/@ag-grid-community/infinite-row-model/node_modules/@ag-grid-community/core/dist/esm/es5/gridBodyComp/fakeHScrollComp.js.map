{"version":3,"sources":["../../../src/ts/gridBodyComp/fakeHScrollComp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,eAAe,EAAoB,MAAM,mBAAmB,CAAC;AACtE,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7D,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAE1D;IAAqC,mCAAS;IAiB1C;eACI,kBAAM,eAAe,CAAC,QAAQ,CAAC;IACnC,CAAC;IAGO,uCAAa,GAArB;QADA,iBAkBC;QAhBG,IAAM,SAAS,GAAqB;YAChC,mBAAmB,EAAE,UAAC,YAAY,EAAE,EAAE,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,EAAE,CAAC,EAA1C,CAA0C;YACrF,SAAS,EAAE,UAAA,MAAM,IAAI,OAAA,cAAc,CAAC,KAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,EAArC,CAAqC;YAC1D,kBAAkB,EAAE,UAAA,MAAM,IAAI,OAAA,cAAc,CAAC,KAAI,CAAC,UAAU,EAAE,MAAM,CAAC,EAAvC,CAAuC;YACrE,iBAAiB,EAAE,UAAA,MAAM,IAAI,OAAA,cAAc,CAAC,KAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAtC,CAAsC;YACnE,wBAAwB,EAAE,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAI,CAAC,YAAY,EAAE,KAAK,CAAC,EAAvC,CAAuC;YAC1E,uBAAuB,EAAE,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAI,CAAC,WAAW,EAAE,KAAK,CAAC,EAAtC,CAAsC;YACxE,4BAA4B,EAAE,UAAC,QAAgB,EAAE,OAAgB;gBAC7D,OAAA,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;YAApD,CAAoD;YACxD,6BAA6B,EAAE,UAAC,QAAgB,EAAE,OAAgB;gBAC9D,OAAA,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;YAArD,CAAqD;SAC5D,CAAC;QACF,IAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAExE,IAAI,CAAC,iBAAiB,CAAC,IAAI,kBAAkB,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,GAAM,KAAK,OAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;IACxG,CAAC;IArCc,wBAAQ,GACnB,wbAMO,CAAC;IAGgB;QAA3B,WAAW,CAAC,aAAa,CAAC;wDAAkC;IAChC;QAA5B,WAAW,CAAC,cAAc,CAAC;yDAAmC;IACrC;QAAzB,WAAW,CAAC,WAAW,CAAC;sDAAgC;IAC9B;QAA1B,WAAW,CAAC,YAAY,CAAC;uDAAiC;IAO3D;QADC,aAAa;wDAkBb;IAEL,sBAAC;CAzCD,AAyCC,CAzCoC,SAAS,GAyC7C;SAzCY,eAAe","file":"fakeHScrollComp.js","sourcesContent":["import { Component } from \"../widgets/component\";\nimport { RefSelector } from \"../widgets/componentAnnotations\";\nimport { PostConstruct } from \"../context/context\";\nimport { FakeHScrollCtrl, IFakeHScrollComp } from \"./fakeHScrollCtrl\";\nimport { setFixedHeight, setFixedWidth } from \"../utils/dom\";\nimport { CenterWidthFeature } from \"./centerWidthFeature\";\n\nexport class FakeHScrollComp extends Component {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-body-horizontal-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" ref=\"eLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" ref=\"eViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" ref=\"eContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" ref=\"eRightSpacer\"></div>\n        </div>`;\n\n    // fake horizontal scroller\n    @RefSelector('eLeftSpacer') private eLeftSpacer: HTMLElement;\n    @RefSelector('eRightSpacer') private eRightSpacer: HTMLElement;\n    @RefSelector('eViewport') private eViewport: HTMLElement;\n    @RefSelector('eContainer') private eContainer: HTMLElement;\n\n    constructor() {\n        super(FakeHScrollComp.TEMPLATE);\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        const compProxy: IFakeHScrollComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setHeight: height => setFixedHeight(this.getGui(), height),\n            setContainerHeight: height => setFixedHeight(this.eContainer, height),\n            setViewportHeight: height => setFixedHeight(this.eViewport, height),\n            setRightSpacerFixedWidth: width => setFixedWidth(this.eRightSpacer, width),\n            setLeftSpacerFixedWidth: width => setFixedWidth(this.eLeftSpacer, width),\n            includeLeftSpacerScrollerCss: (cssClass: string, include: boolean) =>\n                this.eLeftSpacer.classList.toggle(cssClass, include),\n            includeRightSpacerScrollerCss: (cssClass: string, include: boolean) =>\n                this.eRightSpacer.classList.toggle(cssClass, include),\n        };\n        const ctrl = this.createManagedBean(new FakeHScrollCtrl());\n        ctrl.setComp(compProxy, this.getGui(), this.eViewport, this.eContainer);\n\n        this.createManagedBean(new CenterWidthFeature(width => this.eContainer.style.width = `${width}px`));\n    }\n\n}"]}