{"version":3,"sources":["../../../src/ts/widgets/component.ts"],"names":[],"mappings":"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","file":"component.js","sourcesContent":["import { AgEvent } from \"../events\";\nimport { Autowired, PostConstruct, PreConstruct } from \"../context/context\";\nimport { AgStackComponentsRegistry } from \"../components/agStackComponentsRegistry\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { NumberSequence } from \"../utils\";\nimport {\n    isNodeOrElement,\n    copyNodeList,\n    iterateNamedNodeMap,\n    loadTemplate,\n    setVisible,\n    setDisplayed\n} from '../utils/dom';\nimport { getFunctionName } from '../utils/function';\nimport { CustomTooltipFeature } from \"./customTooltipFeature\";\nimport { ITooltipParams } from \"../rendering/tooltipComponent\";\nimport { WithoutGridCommon } from \"../interfaces/iCommon\";\n\nconst compIdSequence = new NumberSequence();\n\nexport interface VisibleChangedEvent extends AgEvent {\n    visible: boolean;\n}\n\nexport class CssClassManager {\n\n    private getGui: () => HTMLElement;\n\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\n    // there, or removing one that wasn't present, all takes CPU.\n    private cssClassStates: { [cssClass: string]: boolean } = {};\n\n    constructor(getGui: () => HTMLElement) {\n        this.getGui = getGui;\n    }\n\n    public addCssClass(className: string): void {\n        const list = (className || '').split(' ');\n\n        if (list.length > 1) {\n            list.forEach(cls => this.addCssClass(cls));\n            return;\n        }\n\n        const updateNeeded = this.cssClassStates[className] !== true;\n        if (updateNeeded && className.length) {\n            this.getGui().classList.add(className);\n            this.cssClassStates[className] = true;\n        }\n    }\n\n    public removeCssClass(className: string): void {\n        const list = (className || '').split(' ');\n\n        if (list.length > 1) {\n            list.forEach(cls => this.removeCssClass(cls));\n            return;\n        }\n\n        const updateNeeded = this.cssClassStates[className] !== false;\n        if (updateNeeded && className.length) {\n            this.getGui().classList.remove(className);\n            this.cssClassStates[className] = false;\n        }\n    }\n\n    public containsCssClass(className: string): boolean {\n        return this.getGui().classList.contains(className);\n    }\n\n    public addOrRemoveCssClass(className: string, addOrRemove: boolean): void {\n        const list = (className || '').split(' ');\n\n        if (list.length > 1) {\n            list.forEach(cls => this.addOrRemoveCssClass(cls, addOrRemove));\n            return;\n        }\n\n        const updateNeeded = this.cssClassStates[className] !== addOrRemove;\n        if (updateNeeded && className.length) {\n            this.getGui().classList.toggle(className, addOrRemove);\n            this.cssClassStates[className] = addOrRemove;\n        }\n    }\n}\n\nexport class Component extends BeanStub {\n\n    public static elementGettingCreated: any;\n\n    public static EVENT_DISPLAYED_CHANGED = 'displayedChanged';\n    private eGui: HTMLElement;\n\n    @Autowired('agStackComponentsRegistry') protected readonly agStackComponentsRegistry: AgStackComponentsRegistry;\n\n    // if false, then CSS class \"ag-hidden\" is applied, which sets \"display: none\"\n    private displayed = true;\n\n    // if false, then CSS class \"ag-invisible\" is applied, which sets \"visibility: hidden\"\n    private visible = true;\n\n    protected parentComponent: Component | undefined;\n\n    // unique id for this row component. this is used for getting a reference to the HTML dom.\n    // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\n    // around as we create a new rowComp instance for the same row node).\n    private compId = compIdSequence.next();\n\n    private cssClassManager: CssClassManager;\n\n    protected usingBrowserTooltips: boolean;\n    private tooltipText: string | undefined;\n    private tooltipFeature: CustomTooltipFeature | undefined;\n\n    constructor(template?: string) {\n        super();\n\n        this.cssClassManager = new CssClassManager(() => this.eGui);\n\n        if (template) {\n            this.setTemplate(template);\n        }\n    }\n\n    @PreConstruct\n    private preConstructOnComponent(): void {\n        this.usingBrowserTooltips = this.gridOptionsWrapper.isEnableBrowserTooltips();\n    }\n\n    public getCompId(): number {\n        return this.compId;\n    }\n\n    public getTooltipParams(): WithoutGridCommon<ITooltipParams> {\n        return {\n            value: this.tooltipText,\n            location: 'UNKNOWN'\n        };\n    }\n\n    public setTooltip(newTooltipText?: string | null): void {\n\n        const removeTooltip = () => {\n            if (this.usingBrowserTooltips) {\n                this.getGui().removeAttribute('title');\n            } else {\n                this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n            }\n        };\n\n        const addTooltip = () => {\n            if (this.usingBrowserTooltips) {\n                this.getGui().setAttribute('title', this.tooltipText!);\n            } else {\n                this.tooltipFeature = this.createBean(new CustomTooltipFeature(this));\n            }\n        };\n\n        if (this.tooltipText != newTooltipText) {\n            if (this.tooltipText) {\n                removeTooltip();\n            }\n\n            if (newTooltipText != null) {\n                this.tooltipText = newTooltipText;\n\n                if (this.tooltipText) {\n                    addTooltip();\n                }\n            }\n        }\n    }\n\n    // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\n    private createChildComponentsFromTags(parentNode: Element, paramsMap?: { [key: string]: any; }): void {\n        // we MUST take a copy of the list first, as the 'swapComponentForNode' adds comments into the DOM\n        // which messes up the traversal order of the children.\n        const childNodeList: Node[] = copyNodeList(parentNode.childNodes);\n\n        childNodeList.forEach(childNode => {\n            if (!(childNode instanceof HTMLElement)) {\n                return;\n            }\n\n            const childComp = this.createComponentFromElement(childNode, childComp => {\n                // copy over all attributes, including css classes, so any attributes user put on the tag\n                // wll be carried across\n                const childGui = childComp.getGui();\n                if (childGui) {\n                    this.copyAttributesFromNode(childNode, childComp.getGui());\n                }\n            }, paramsMap);\n\n            if (childComp) {\n                if ((childComp as any).addItems && childNode.children.length) {\n                    this.createChildComponentsFromTags(childNode, paramsMap);\n\n                    // converting from HTMLCollection to Array\n                    const items = Array.prototype.slice.call(childNode.children);\n\n                    (childComp as any).addItems(items);\n                }\n                // replace the tag (eg ag-checkbox) with the proper HTMLElement (eg 'div') in the dom\n                this.swapComponentForNode(childComp, parentNode, childNode);\n            } else if (childNode.childNodes) {\n                this.createChildComponentsFromTags(childNode, paramsMap);\n            }\n        });\n    }\n\n    public createComponentFromElement(\n        element: HTMLElement,\n        afterPreCreateCallback?: (comp: Component) => void,\n        paramsMap?: { [key: string]: any; }\n    ): Component | null {\n        const key = element.nodeName;\n        const componentParams = paramsMap ? paramsMap[element.getAttribute('ref')!] : undefined;\n        const ComponentClass = this.agStackComponentsRegistry.getComponentClass(key);\n\n        if (ComponentClass) {\n            Component.elementGettingCreated = element;\n            const newComponent = new ComponentClass(componentParams) as Component;\n            newComponent.setParentComponent(this);\n\n            this.createBean(newComponent, null, afterPreCreateCallback);\n            return newComponent;\n        }\n        return null;\n    }\n\n    private copyAttributesFromNode(source: Element, dest: Element): void {\n        iterateNamedNodeMap(source.attributes, (name, value) => dest.setAttribute(name, value));\n    }\n\n    private swapComponentForNode(newComponent: Component, parentNode: Element, childNode: Node): void {\n        const eComponent = newComponent.getGui();\n        parentNode.replaceChild(eComponent, childNode);\n        parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\n        this.addDestroyFunc(this.destroyBean.bind(this, newComponent));\n        this.swapInComponentForQuerySelectors(newComponent, childNode);\n    }\n\n    private swapInComponentForQuerySelectors(newComponent: Component, childNode: Node): void {\n        const thisNoType = this as any;\n\n        this.iterateOverQuerySelectors((querySelector: any) => {\n            if (thisNoType[querySelector.attributeName] === childNode) {\n                thisNoType[querySelector.attributeName] = newComponent;\n            }\n        });\n    }\n\n    private iterateOverQuerySelectors(action: (querySelector: any) => void): void {\n        let thisPrototype: any = Object.getPrototypeOf(this);\n\n        while (thisPrototype != null) {\n            const metaData = thisPrototype.__agComponentMetaData;\n            const currentProtoName = getFunctionName(thisPrototype.constructor);\n\n            if (metaData && metaData[currentProtoName] && metaData[currentProtoName].querySelectors) {\n                metaData[currentProtoName].querySelectors.forEach((querySelector: any) => action(querySelector));\n            }\n\n            thisPrototype = Object.getPrototypeOf(thisPrototype);\n        }\n    }\n\n    public setTemplate(template: string | null | undefined, paramsMap?: { [key: string]: any; }): void {\n        const eGui = loadTemplate(template as string);\n        this.setTemplateFromElement(eGui, paramsMap);\n    }\n\n    public setTemplateFromElement(element: HTMLElement, paramsMap?: { [key: string]: any; }): void {\n        this.eGui = element;\n        (this.eGui as any).__agComponent = this;\n        this.wireQuerySelectors();\n\n        // context will not be available when user sets template in constructor\n        if (!!this.getContext()) {\n            this.createChildComponentsFromTags(this.getGui(), paramsMap);\n        }\n    }\n\n    @PreConstruct\n    private createChildComponentsPreConstruct(): void {\n        // ui exists if user sets template in constructor. when this happens, we have to wait for the context\n        // to be autoWired first before we can create child components.\n        if (!!this.getGui()) {\n            this.createChildComponentsFromTags(this.getGui());\n        }\n    }\n\n    protected wireQuerySelectors(): void {\n        if (!this.eGui) {\n            return;\n        }\n\n        const thisNoType = this as any;\n\n        this.iterateOverQuerySelectors((querySelector: any) => {\n            const setResult = (result: any) => thisNoType[querySelector.attributeName] = result;\n\n            // if it's a ref selector, and match is on top level component, we return\n            // the element. otherwise no way of components putting ref=xxx on the top\n            // level element as querySelector only looks at children.\n            const topLevelRefMatch = querySelector.refSelector\n                && this.eGui.getAttribute('ref') === querySelector.refSelector;\n            if (topLevelRefMatch) {\n                setResult(this.eGui);\n            } else {\n                // otherwise use querySelector, which looks at children\n                const resultOfQuery = this.eGui.querySelector(querySelector.querySelector);\n                if (resultOfQuery) {\n                    setResult(resultOfQuery.__agComponent || resultOfQuery);\n                }\n            }\n\n        });\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui;\n    }\n\n    public getFocusableElement(): HTMLElement {\n        return this.eGui;\n    }\n\n    public setParentComponent(component: Component) {\n        this.parentComponent = component;\n    }\n\n    public getParentComponent(): Component | undefined {\n        return this.parentComponent;\n    }\n\n    // this method is for older code, that wants to provide the gui element,\n    // it is not intended for this to be in ag-Stack\n    protected setGui(eGui: HTMLElement): void {\n        this.eGui = eGui;\n    }\n\n    protected queryForHtmlElement(cssSelector: string): HTMLElement {\n        return this.eGui.querySelector(cssSelector) as HTMLElement;\n    }\n\n    protected queryForHtmlInputElement(cssSelector: string): HTMLInputElement {\n        return this.eGui.querySelector(cssSelector) as HTMLInputElement;\n    }\n\n    public appendChild(newChild: HTMLElement | Component, container?: HTMLElement): void {\n        if (!container) {\n            container = this.eGui;\n        }\n\n        if (newChild == null) { return; }\n\n        if (isNodeOrElement(newChild)) {\n            container.appendChild(newChild as HTMLElement);\n        } else {\n            const childComponent = newChild as Component;\n            container.appendChild(childComponent.getGui());\n            this.addDestroyFunc(this.destroyBean.bind(this, childComponent));\n        }\n    }\n\n    public isDisplayed(): boolean {\n        return this.displayed;\n    }\n\n    public setVisible(visible: boolean): void {\n        if (visible !== this.visible) {\n            this.visible = visible;\n\n            setVisible(this.eGui, visible);\n        }\n    }\n\n    public setDisplayed(displayed: boolean): void {\n        if (displayed !== this.displayed) {\n            this.displayed = displayed;\n\n            setDisplayed(this.eGui, displayed);\n\n            const event: VisibleChangedEvent = {\n                type: Component.EVENT_DISPLAYED_CHANGED,\n                visible: this.displayed\n            };\n\n            this.dispatchEvent(event);\n        }\n    }\n\n    protected destroy(): void {\n        if (this.tooltipFeature) {\n            this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n        }\n        super.destroy();\n    }\n\n    public addGuiEventListener(event: string, listener: (event: any) => void): void {\n        this.eGui.addEventListener(event, listener);\n        this.addDestroyFunc(() => this.eGui.removeEventListener(event, listener));\n    }\n\n    public addCssClass(className: string): void {\n        this.cssClassManager.addCssClass(className);\n    }\n\n    public removeCssClass(className: string): void {\n        this.cssClassManager.removeCssClass(className);\n    }\n\n    public containsCssClass(className: string): boolean {\n        return this.cssClassManager.containsCssClass(className);\n    }\n\n    public addOrRemoveCssClass(className: string, addOrRemove: boolean): void {\n        this.cssClassManager.addOrRemoveCssClass(className, addOrRemove);\n    }\n\n    public getAttribute(key: string): string | null {\n        const { eGui } = this;\n        return eGui ? eGui.getAttribute(key) : null;\n    }\n\n    public getRefElement(refName: string): HTMLElement {\n        return this.queryForHtmlElement(`[ref=\"${refName}\"]`);\n    }\n}\n"]}