{"version":3,"sources":["../../../src/ts/headerRendering/gridHeaderComp.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAmB,MAAM,kBAAkB,CAAC;AACnE,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAE/E,MAAM,OAAO,cAAe,SAAQ,SAAS;IAKzC;QACI,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAGO,aAAa;QAEjB,MAAM,SAAS,GAAoB;YAC/B,mBAAmB,EAAE,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,EAAE,CAAC;YACrF,qBAAqB,EAAE,MAAM,CAAC,EAAE;gBAC5B,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBACpC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;YAC3C,CAAC;SACJ,CAAC;QAEF,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;QAEnE,MAAM,YAAY,GAAG,CAAC,SAAiC,EAAE,EAAE;YACvD,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC;QAEF,YAAY,CAAC,IAAI,sBAAsB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAChE,YAAY,CAAC,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,YAAY,CAAC,IAAI,sBAAsB,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IACrE,CAAC;;AA7Bc,uBAAQ,GACnB,8CAA8C,CAAC;AAOnD;IADC,aAAa;mDAsBb","file":"gridHeaderComp.js","sourcesContent":["import { Constants } from '../constants/constants';\nimport { PostConstruct } from '../context/context';\nimport { Component } from '../widgets/component';\nimport { GridHeaderCtrl, IGridHeaderComp } from './gridHeaderCtrl';\nimport { HeaderRowContainerComp } from './rowContainer/headerRowContainerComp';\n\nexport class GridHeaderComp extends Component {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-header\" role=\"presentation\"/>`;\n\n    constructor() {\n        super(GridHeaderComp.TEMPLATE);\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setHeightAndMinHeight: height => {\n                this.getGui().style.height = height;\n                this.getGui().style.minHeight = height;\n            }\n        };\n\n        const ctrl = this.createManagedBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\n\n        const addContainer = (container: HeaderRowContainerComp) => {\n            this.createManagedBean(container);\n            this.appendChild(container);\n        };\n\n        addContainer(new HeaderRowContainerComp(Constants.PINNED_LEFT));\n        addContainer(new HeaderRowContainerComp(null));\n        addContainer(new HeaderRowContainerComp(Constants.PINNED_RIGHT));\n    }\n}\n"]}