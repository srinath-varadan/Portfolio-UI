{"version":3,"sources":["../../../src/ts/styling/layoutFeature.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAC9D,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3D,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAM/C,MAAM,CAAN,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IACxB,yDAAqC,CAAA;IACrC,+CAA2B,CAAA;IAC3B,6CAAyB,CAAA;AAC7B,CAAC,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;AAQD,MAAM,OAAO,aAAc,SAAQ,QAAQ;IAMvC,YAAY,IAAgB;QACxB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAGO,aAAa;QACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,eAAe,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1H,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAEO,mBAAmB;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACzD,MAAM,MAAM,GAAG;YACX,UAAU,EAAE,SAAS,KAAK,SAAS,CAAC,sBAAsB;YAC1D,MAAM,EAAE,SAAS,KAAK,SAAS,CAAC,iBAAiB;YACjD,KAAK,EAAE,SAAS,KAAK,SAAS,CAAC,gBAAgB;SAClD,CAAC;QACF,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACpF,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpD,CAAC;CAEJ;AA3BoC;IAAhC,SAAS,CAAC,oBAAoB,CAAC;yDAA2D;AAU3F;IADC,aAAa;kDAIb","file":"layoutFeature.js","sourcesContent":["import { Constants } from \"../constants/constants\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { BeanStub } from \"../context/beanStub\";\n\nexport interface LayoutView {\n    updateLayoutClasses(layoutClass: string, params: UpdateLayoutClassesParams): void;\n}\n\nexport enum LayoutCssClasses {\n    AUTO_HEIGHT = 'ag-layout-auto-height',\n    NORMAL = 'ag-layout-normal',\n    PRINT = 'ag-layout-print'\n}\n\nexport interface UpdateLayoutClassesParams {\n    autoHeight: boolean;\n    normal: boolean;\n    print: boolean;\n}\n\nexport class LayoutFeature extends BeanStub {\n\n    @Autowired('gridOptionsWrapper') protected readonly gridOptionsWrapper: GridOptionsWrapper;\n\n    private view: LayoutView;\n\n    constructor(view: LayoutView) {\n        super();\n        this.view = view;\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_DOM_LAYOUT, this.updateLayoutClasses.bind(this));\n        this.updateLayoutClasses();\n    }\n\n    private updateLayoutClasses(): void {\n        const domLayout = this.gridOptionsWrapper.getDomLayout();\n        const params = {\n            autoHeight: domLayout === Constants.DOM_LAYOUT_AUTO_HEIGHT,\n            normal: domLayout === Constants.DOM_LAYOUT_NORMAL,\n            print: domLayout === Constants.DOM_LAYOUT_PRINT\n        };\n        const cssClass = params.autoHeight ? LayoutCssClasses.AUTO_HEIGHT :\n                            params.print ? LayoutCssClasses.PRINT : LayoutCssClasses.NORMAL;\n        this.view.updateLayoutClasses(cssClass, params);\n    }\n\n}"]}