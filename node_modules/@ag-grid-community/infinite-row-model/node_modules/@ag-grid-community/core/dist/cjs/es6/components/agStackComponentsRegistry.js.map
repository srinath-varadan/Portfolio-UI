{"version":3,"sources":["../../../src/ts/components/agStackComponentsRegistry.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,gDAAyD;AACzD,kDAA+C;AAG/C,IAAa,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,mBAAQ;IAAvD;;QAEY,2BAAsB,GAA2B,EAAE,CAAC;IAwBhE,CAAC;IAtBU,eAAe,CAAC,UAA2B;QAC9C,IAAI,UAAU,EAAE;YACZ,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;SACzE;IACL,CAAC;IAEO,YAAY,CAAC,aAA4B;QAC7C,oCAAoC;QACpC,kDAAkD;QAClD,2CAA2C;QAC3C,yEAAyE;QACzE,MAAM,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QACnG,wBAAwB;QACxB,MAAM,cAAc,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;QAClD,gBAAgB;QAChB,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,GAAG,aAAa,CAAC,cAAc,CAAC;IAC/E,CAAC;IAEM,iBAAiB,CAAC,OAAe;QACpC,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;CAEJ,CAAA;AA1BY,yBAAyB;IADrC,cAAI,CAAC,2BAA2B,CAAC;GACrB,yBAAyB,CA0BrC;AA1BY,8DAAyB","file":"agStackComponentsRegistry.js","sourcesContent":["import { Bean, ComponentMeta } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\n\n@Bean('agStackComponentsRegistry')\nexport class AgStackComponentsRegistry extends BeanStub {\n\n    private componentsMappedByName: { [key: string]: any } = {};\n\n    public setupComponents(components: ComponentMeta[]): void {\n        if (components) {\n            components.forEach(componentMeta => this.addComponent(componentMeta));\n        }\n    }\n\n    private addComponent(componentMeta: ComponentMeta): void {\n        // get name of the class as a string\n        // let className = getNameOfClass(ComponentClass);\n        // insert a dash after every capital letter\n        // let classEscaped = className.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n        const classEscaped = componentMeta.componentName.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n        // put all to upper case\n        const classUpperCase = classEscaped.toUpperCase();\n        // finally store\n        this.componentsMappedByName[classUpperCase] = componentMeta.componentClass;\n    }\n\n    public getComponentClass(htmlTag: string): any {\n        return this.componentsMappedByName[htmlTag];\n    }\n\n}\n"]}