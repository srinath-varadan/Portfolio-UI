{"version":3,"sources":["../../../src/ts/gridBodyComp/fakeHScrollComp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,0EAA8D;AAC9D,gDAAmD;AACnD,uDAAsE;AACtE,sCAA6D;AAC7D,6DAA0D;AAE1D,MAAa,eAAgB,SAAQ,qBAAS;IAiB1C;QACI,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAGO,aAAa;QACjB,MAAM,SAAS,GAAqB;YAChC,mBAAmB,EAAE,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,EAAE,CAAC;YACrF,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,oBAAc,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC;YAC1D,kBAAkB,EAAE,MAAM,CAAC,EAAE,CAAC,oBAAc,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;YACrE,iBAAiB,EAAE,MAAM,CAAC,EAAE,CAAC,oBAAc,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC;YACnE,wBAAwB,EAAE,KAAK,CAAC,EAAE,CAAC,mBAAa,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC;YAC1E,uBAAuB,EAAE,KAAK,CAAC,EAAE,CAAC,mBAAa,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC;YACxE,4BAA4B,EAAE,CAAC,QAAgB,EAAE,OAAgB,EAAE,EAAE,CACjE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;YACxD,6BAA6B,EAAE,CAAC,QAAgB,EAAE,OAAgB,EAAE,EAAE,CAClE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;SAC5D,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,iCAAe,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAExE,IAAI,CAAC,iBAAiB,CAAC,IAAI,uCAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;IACxG,CAAC;;AArCc,wBAAQ,GACnB;;;;;;eAMO,CAAC;AAGgB;IAA3B,kCAAW,CAAC,aAAa,CAAC;oDAAkC;AAChC;IAA5B,kCAAW,CAAC,cAAc,CAAC;qDAAmC;AACrC;IAAzB,kCAAW,CAAC,WAAW,CAAC;kDAAgC;AAC9B;IAA1B,kCAAW,CAAC,YAAY,CAAC;mDAAiC;AAO3D;IADC,uBAAa;oDAkBb;AAvCL,0CAyCC","file":"fakeHScrollComp.js","sourcesContent":["import { Component } from \"../widgets/component\";\nimport { RefSelector } from \"../widgets/componentAnnotations\";\nimport { PostConstruct } from \"../context/context\";\nimport { FakeHScrollCtrl, IFakeHScrollComp } from \"./fakeHScrollCtrl\";\nimport { setFixedHeight, setFixedWidth } from \"../utils/dom\";\nimport { CenterWidthFeature } from \"./centerWidthFeature\";\n\nexport class FakeHScrollComp extends Component {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-body-horizontal-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" ref=\"eLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" ref=\"eViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" ref=\"eContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" ref=\"eRightSpacer\"></div>\n        </div>`;\n\n    // fake horizontal scroller\n    @RefSelector('eLeftSpacer') private eLeftSpacer: HTMLElement;\n    @RefSelector('eRightSpacer') private eRightSpacer: HTMLElement;\n    @RefSelector('eViewport') private eViewport: HTMLElement;\n    @RefSelector('eContainer') private eContainer: HTMLElement;\n\n    constructor() {\n        super(FakeHScrollComp.TEMPLATE);\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        const compProxy: IFakeHScrollComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setHeight: height => setFixedHeight(this.getGui(), height),\n            setContainerHeight: height => setFixedHeight(this.eContainer, height),\n            setViewportHeight: height => setFixedHeight(this.eViewport, height),\n            setRightSpacerFixedWidth: width => setFixedWidth(this.eRightSpacer, width),\n            setLeftSpacerFixedWidth: width => setFixedWidth(this.eLeftSpacer, width),\n            includeLeftSpacerScrollerCss: (cssClass: string, include: boolean) =>\n                this.eLeftSpacer.classList.toggle(cssClass, include),\n            includeRightSpacerScrollerCss: (cssClass: string, include: boolean) =>\n                this.eRightSpacer.classList.toggle(cssClass, include),\n        };\n        const ctrl = this.createManagedBean(new FakeHScrollCtrl());\n        ctrl.setComp(compProxy, this.getGui(), this.eViewport, this.eContainer);\n\n        this.createManagedBean(new CenterWidthFeature(width => this.eContainer.style.width = `${width}px`));\n    }\n\n}"]}