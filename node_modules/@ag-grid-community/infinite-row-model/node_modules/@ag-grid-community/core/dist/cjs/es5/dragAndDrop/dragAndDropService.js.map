{"version":3,"sources":["../../../src/ts/dragAndDrop/dragAndDropService.ts"],"names":[],"mappings":"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","file":"dragAndDropService.js","sourcesContent":["import { BeanStub } from \"../context/beanStub\";\nimport { PostConstruct, Bean, Autowired, PreDestroy } from \"../context/context\";\nimport { Column } from \"../entities/column\";\nimport { ColumnApi } from \"../columns/columnApi\";\nimport { GridApi } from \"../gridApi\";\nimport { DragService, DragListenerParams } from \"./dragService\";\nimport { Environment } from \"../environment\";\nimport { RowDropZoneParams } from \"../gridBodyComp/rowDragFeature\";\nimport { RowNode } from \"../entities/rowNode\";\nimport { escapeString } from \"../utils/string\";\nimport { createIcon } from \"../utils/icon\";\nimport { removeFromArray } from \"../utils/array\";\nimport { getBodyHeight, getBodyWidth } from \"../utils/browser\";\nimport { loadTemplate, clearElement } from \"../utils/dom\";\nimport { isFunction } from \"../utils/function\";\n\nexport interface DragItem {\n    /**\n     * When dragging a row, this contains the row node being dragged\n     * When dragging multiple rows, this contains the row that started the drag.\n     */\n    rowNode?: RowNode;\n\n    /** When dragging multiple rows, this contains all rows being dragged */\n    rowNodes?: RowNode[];\n\n    /** When dragging columns, this contains the columns being dragged */\n    columns?: Column[];\n\n    /** When dragging columns, this contains the visible state of the columns */\n    visibleState?: { [key: string]: boolean };\n}\n\nexport enum DragSourceType { ToolPanel, HeaderCell, RowDrag, ChartPanel }\n\nexport interface DragSource {\n    /**\n     * The type of the drag source, used by the drop target to know where the\n     * drag originated from.\n     */\n    type: DragSourceType;\n    /**\n     * Element which, when dragged, will kick off the DnD process\n     */\n    eElement: HTMLElement;\n    /**\n     * If eElement is dragged, then the dragItem is the object that gets passed around.\n     */\n    getDragItem: () => DragItem;\n    /**\n     * This name appears in the ghost icon when dragging.\n     */\n    dragItemName: string | (() => string) | null;\n    /**\n     * Icon to show when not over a drop zone\n     */\n    defaultIconName?: string;\n    /**\n     * The drop target associated with this dragSource. When dragging starts, this\n     * target does not get an onDragEnter event.\n     */\n    dragSourceDropTarget?: DropTarget;\n    /**\n     * The drag source DOM Data Key, this is useful to detect if the origin grid is the same\n     * as the target grid.\n     */\n    dragSourceDomDataKey?: string;\n    /**\n     * After how many pixels of dragging should the drag operation start. Default is 4.\n     */\n    dragStartPixels?: number;\n    /**\n     * Callback for drag started\n     */\n    onDragStarted?: () => void;\n    /**\n     * Callback for drag stopped\n     */\n    onDragStopped?: () => void;\n}\n\nexport interface DropTarget {\n    /** The main container that will get the drop. */\n    getContainer(): HTMLElement;\n    /** If any secondary containers. For example when moving columns in AG Grid, we listen for drops\n     * in the header as well as the body (main rows and pinned rows) of the grid. */\n    getSecondaryContainers?(): HTMLElement[][];\n    /** Icon to show when drag is over */\n    getIconName?(): string | null;\n\n    isInterestedIn(type: DragSourceType, el: HTMLElement): boolean;\n\n    /**\n     * If `true`, the DragSources will only be allowed to be dragged within the DragTarget that contains them.\n     * This is useful for changing order of items within a container, and not moving items across containers.\n     * Default: `false`\n     */\n    targetContainsSource?: boolean;\n\n    /** Callback for when drag enters */\n    onDragEnter?(params: DraggingEvent): void;\n    /** Callback for when drag leaves */\n    onDragLeave?(params: DraggingEvent): void;\n    /** Callback for when dragging */\n    onDragging?(params: DraggingEvent): void;\n    /** Callback for when drag stops */\n    onDragStop?(params: DraggingEvent): void;\n    external?: boolean;\n}\n\nexport enum VerticalDirection { Up, Down }\nexport enum HorizontalDirection { Left, Right }\n\nexport interface DraggingEvent {\n    event: MouseEvent;\n    x: number;\n    y: number;\n    vDirection: VerticalDirection | null;\n    hDirection: HorizontalDirection | null;\n    dragSource: DragSource;\n    dragItem: DragItem;\n    fromNudge: boolean;\n    api: GridApi;\n    columnApi: ColumnApi;\n    dropZoneTarget: HTMLElement;\n}\n\n@Bean('dragAndDropService')\nexport class DragAndDropService extends BeanStub {\n\n    @Autowired('dragService') private dragService: DragService;\n    @Autowired('environment') private environment: Environment;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n\n    public static ICON_PINNED = 'pinned';\n    public static ICON_MOVE = 'move';\n    public static ICON_LEFT = 'left';\n    public static ICON_RIGHT = 'right';\n    public static ICON_GROUP = 'group';\n    public static ICON_AGGREGATE = 'aggregate';\n    public static ICON_PIVOT = 'pivot';\n    public static ICON_NOT_ALLOWED = 'notAllowed';\n    public static ICON_HIDE = 'hide';\n\n    public static GHOST_TEMPLATE = /* html */\n        `<div class=\"ag-dnd-ghost ag-unselectable\">\n            <span class=\"ag-dnd-ghost-icon ag-shake-left-to-right\"></span>\n            <div class=\"ag-dnd-ghost-label\"></div>\n        </div>`;\n\n    private dragSourceAndParamsList: { params: DragListenerParams, dragSource: DragSource }[] = [];\n\n    private dragItem: DragItem | null;\n    private eventLastTime: MouseEvent | null;\n    private dragSource: DragSource;\n    private dragging: boolean;\n\n    private eGhost: HTMLElement | null;\n    private eGhostParent: HTMLElement;\n    private eGhostIcon: HTMLElement;\n\n    private dropTargets: DropTarget[] = [];\n    private lastDropTarget: DropTarget | null | undefined;\n\n    private ePinnedIcon: HTMLElement;\n    private eHideIcon: HTMLElement;\n    private eMoveIcon: HTMLElement;\n    private eLeftIcon: HTMLElement;\n    private eRightIcon: HTMLElement;\n    private eGroupIcon: HTMLElement;\n    private eAggregateIcon: HTMLElement;\n    private ePivotIcon: HTMLElement;\n    private eDropNotAllowedIcon: HTMLElement;\n\n    @PostConstruct\n    private init(): void {\n        this.ePinnedIcon = createIcon('columnMovePin', this.gridOptionsWrapper, null);\n        this.eHideIcon = createIcon('columnMoveHide', this.gridOptionsWrapper, null);\n        this.eMoveIcon = createIcon('columnMoveMove', this.gridOptionsWrapper, null);\n        this.eLeftIcon = createIcon('columnMoveLeft', this.gridOptionsWrapper, null);\n        this.eRightIcon = createIcon('columnMoveRight', this.gridOptionsWrapper, null);\n        this.eGroupIcon = createIcon('columnMoveGroup', this.gridOptionsWrapper, null);\n        this.eAggregateIcon = createIcon('columnMoveValue', this.gridOptionsWrapper, null);\n        this.ePivotIcon = createIcon('columnMovePivot', this.gridOptionsWrapper, null);\n        this.eDropNotAllowedIcon = createIcon('dropNotAllowed', this.gridOptionsWrapper, null);\n    }\n\n    public addDragSource(dragSource: DragSource, allowTouch = false): void {\n        const params: DragListenerParams = {\n            eElement: dragSource.eElement,\n            dragStartPixels: dragSource.dragStartPixels,\n            onDragStart: this.onDragStart.bind(this, dragSource),\n            onDragStop: this.onDragStop.bind(this),\n            onDragging: this.onDragging.bind(this)\n        };\n\n        this.dragSourceAndParamsList.push({ params: params, dragSource: dragSource });\n\n        this.dragService.addDragSource(params, allowTouch);\n    }\n\n    public removeDragSource(dragSource: DragSource): void {\n        const sourceAndParams = this.dragSourceAndParamsList.find(item => item.dragSource === dragSource);\n\n        if (sourceAndParams) {\n            this.dragService.removeDragSource(sourceAndParams.params);\n            removeFromArray(this.dragSourceAndParamsList, sourceAndParams);\n        }\n    }\n\n    @PreDestroy\n    private clearDragSourceParamsList(): void {\n        this.dragSourceAndParamsList.forEach(sourceAndParams => this.dragService.removeDragSource(sourceAndParams.params));\n        this.dragSourceAndParamsList.length = 0;\n    }\n\n    public nudge(): void {\n        if (this.dragging) {\n            this.onDragging(this.eventLastTime!, true);\n        }\n    }\n\n    private onDragStart(dragSource: DragSource, mouseEvent: MouseEvent): void {\n        this.dragging = true;\n        this.dragSource = dragSource;\n        this.eventLastTime = mouseEvent;\n        this.dragItem = this.dragSource.getDragItem();\n        this.lastDropTarget = this.dragSource.dragSourceDropTarget;\n\n        if (this.dragSource.onDragStarted) {\n            this.dragSource.onDragStarted();\n        }\n\n        this.createGhost();\n    }\n\n    private onDragStop(mouseEvent: MouseEvent): void {\n        this.eventLastTime = null;\n        this.dragging = false;\n\n        if (this.dragSource.onDragStopped) {\n            this.dragSource.onDragStopped();\n        }\n\n        if (this.lastDropTarget && this.lastDropTarget.onDragStop) {\n            const draggingEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, null, null, false);\n            this.lastDropTarget.onDragStop(draggingEvent);\n        }\n\n        this.lastDropTarget = null;\n        this.dragItem = null;\n        this.removeGhost();\n    }\n\n    private onDragging(mouseEvent: MouseEvent, fromNudge: boolean): void {\n        const hDirection = this.getHorizontalDirection(mouseEvent);\n        const vDirection = this.getVerticalDirection(mouseEvent);\n\n        this.eventLastTime = mouseEvent;\n\n        this.positionGhost(mouseEvent);\n\n        // check if mouseEvent intersects with any of the drop targets\n        const validDropTargets = this.dropTargets.filter(target => this.isMouseOnDropTarget(mouseEvent, target));\n        const len = validDropTargets.length;\n\n        let dropTarget: DropTarget | null = null;\n\n        if (len > 0) {\n            dropTarget = len === 1\n            ? validDropTargets[0]\n            // the current mouse position could intersect with more than 1 element\n            // if they are nested. In that case we need to get the most specific\n            // container, which is the one that does not contain any other targets.\n            : validDropTargets.reduce((prevTarget, currTarget) => {\n                if (!prevTarget) { return currTarget; }\n                const prevContainer = prevTarget.getContainer();\n                const currContainer = currTarget.getContainer();\n\n                if (prevContainer.contains(currContainer)) { return currTarget; }\n\n                return prevTarget;\n            });\n        }\n\n        if (dropTarget !== this.lastDropTarget) {\n            this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n            this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n            this.lastDropTarget = dropTarget;\n        } else if (dropTarget && dropTarget.onDragging) {\n            const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n            dropTarget.onDragging(draggingEvent);\n        }\n    }\n\n    private enterDragTargetIfExists(dropTarget: DropTarget | null, mouseEvent: MouseEvent, hDirection: HorizontalDirection | null, vDirection: VerticalDirection | null, fromNudge: boolean): void {\n        if (!dropTarget) { return; }\n\n        if (dropTarget.onDragEnter) {\n            const dragEnterEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n\n            dropTarget.onDragEnter(dragEnterEvent);\n        }\n\n        this.setGhostIcon(dropTarget.getIconName ? dropTarget.getIconName() : null);\n    }\n\n    private leaveLastTargetIfExists(mouseEvent: MouseEvent, hDirection: HorizontalDirection | null, vDirection: VerticalDirection | null, fromNudge: boolean): void {\n        if (!this.lastDropTarget) { return; }\n\n        if (this.lastDropTarget.onDragLeave) {\n            const dragLeaveEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n\n            this.lastDropTarget.onDragLeave(dragLeaveEvent);\n        }\n\n        this.setGhostIcon(null);\n    }\n\n    private getAllContainersFromDropTarget(dropTarget: DropTarget): HTMLElement[][] {\n        const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n        const containers: HTMLElement[][] = [[dropTarget.getContainer()]];\n\n        return secondaryContainers ? containers.concat(secondaryContainers) : containers;\n    }\n\n    private allContainersIntersect(mouseEvent: MouseEvent, containers: HTMLElement[]) {\n        for (const container of containers) {\n            const rect = container.getBoundingClientRect();\n\n            // if element is not visible, then width and height are zero\n            if (rect.width === 0 || rect.height === 0) { return false; }\n\n            const horizontalFit = mouseEvent.clientX >= rect.left && mouseEvent.clientX < rect.right;\n            const verticalFit = mouseEvent.clientY >= rect.top && mouseEvent.clientY < rect.bottom;\n\n            if (!horizontalFit || !verticalFit) { return false; }\n        }\n        return true;\n    }\n\n    // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n    private isMouseOnDropTarget(mouseEvent: MouseEvent, dropTarget: DropTarget): boolean {\n        const allContainersFromDropTarget = this.getAllContainersFromDropTarget(dropTarget);\n        let mouseOverTarget = false;\n\n        for (const currentContainers of allContainersFromDropTarget) {\n            if (this.allContainersIntersect(mouseEvent, currentContainers)) {\n                mouseOverTarget = true;\n                break;\n            }\n        }\n\n        if (dropTarget.targetContainsSource && !dropTarget.getContainer().contains(this.dragSource.eElement)) { return false; }\n\n        return mouseOverTarget && dropTarget.isInterestedIn(this.dragSource.type, this.dragSource.eElement);\n    }\n\n    public addDropTarget(dropTarget: DropTarget) {\n        this.dropTargets.push(dropTarget);\n    }\n\n    public removeDropTarget(dropTarget: DropTarget) {\n        this.dropTargets = this.dropTargets.filter(target => target.getContainer() !== dropTarget.getContainer());\n    }\n\n    public hasExternalDropZones(): boolean {\n        return this.dropTargets.some(zones => zones.external);\n    }\n\n    public findExternalZone(params: RowDropZoneParams): DropTarget | null {\n        const externalTargets = this.dropTargets.filter(target => target.external);\n\n        return externalTargets.find(zone => zone.getContainer() === params.getContainer()) || null;\n    }\n\n    public getHorizontalDirection(event: MouseEvent): HorizontalDirection | null {\n        const clientX = this.eventLastTime && this.eventLastTime.clientX;\n        const eClientX = event.clientX;\n\n        if (clientX === eClientX) { return null; }\n\n        return clientX! > eClientX ? HorizontalDirection.Left : HorizontalDirection.Right;\n    }\n\n    public getVerticalDirection(event: MouseEvent): VerticalDirection | null {\n        const clientY = this.eventLastTime && this.eventLastTime.clientY;\n        const eClientY = event.clientY;\n\n        if (clientY === eClientY) { return null; }\n\n        return clientY! > eClientY ? VerticalDirection.Up : VerticalDirection.Down;\n    }\n\n    public createDropTargetEvent(\n        dropTarget: DropTarget,\n        event: MouseEvent,\n        hDirection: HorizontalDirection | null,\n        vDirection: VerticalDirection | null,\n        fromNudge: boolean\n    ): DraggingEvent {\n        // localise x and y to the target\n        const dropZoneTarget = dropTarget.getContainer();\n        const rect = dropZoneTarget.getBoundingClientRect();\n        const { gridApi: api, columnApi, dragItem, dragSource } = this;\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n\n        return { event, x, y, vDirection, hDirection, dragSource, fromNudge, dragItem: dragItem as DragItem, api, columnApi, dropZoneTarget };\n    }\n\n    private positionGhost(event: MouseEvent): void {\n        const ghost = this.eGhost;\n\n        if (!ghost) { return; }\n\n        const ghostRect = ghost.getBoundingClientRect();\n        const ghostHeight = ghostRect.height;\n\n        // for some reason, without the '-2', it still overlapped by 1 or 2 pixels, which\n        // then brought in scrollbars to the browser. no idea why, but putting in -2 here\n        // works around it which is good enough for me.\n        const browserWidth = getBodyWidth() - 2;\n        const browserHeight = getBodyHeight() - 2;\n\n        let top = event.pageY - (ghostHeight / 2);\n        let left = event.pageX - 10;\n\n        const eDocument = this.gridOptionsWrapper.getDocument();\n        const win = (eDocument.defaultView || window);\n        const windowScrollY = win.pageYOffset || eDocument.documentElement.scrollTop;\n        const windowScrollX = win.pageXOffset || eDocument.documentElement.scrollLeft;\n\n        // check ghost is not positioned outside of the browser\n        if (browserWidth > 0 && ((left + ghost.clientWidth) > (browserWidth + windowScrollX))) {\n            left = browserWidth + windowScrollX - ghost.clientWidth;\n        }\n\n        if (left < 0) {\n            left = 0;\n        }\n\n        if (browserHeight > 0 && ((top + ghost.clientHeight) > (browserHeight + windowScrollY))) {\n            top = browserHeight + windowScrollY - ghost.clientHeight;\n        }\n\n        if (top < 0) {\n            top = 0;\n        }\n\n        ghost.style.left = `${left}px`;\n        ghost.style.top = `${top}px`;\n    }\n\n    private removeGhost(): void {\n        if (this.eGhost && this.eGhostParent) {\n            this.eGhostParent.removeChild(this.eGhost);\n        }\n\n        this.eGhost = null;\n    }\n\n    private createGhost(): void {\n        this.eGhost = loadTemplate(DragAndDropService.GHOST_TEMPLATE);\n        const { theme } = this.environment.getTheme();\n\n        if (theme) {\n            this.eGhost.classList.add(theme);\n        }\n\n        this.eGhostIcon = this.eGhost.querySelector('.ag-dnd-ghost-icon') as HTMLElement;\n\n        this.setGhostIcon(null);\n\n        const eText = this.eGhost.querySelector('.ag-dnd-ghost-label') as HTMLElement;\n        let dragItemName = this.dragSource.dragItemName;\n\n        if (isFunction(dragItemName)) {\n            dragItemName = (dragItemName as () => string)();\n        }\n\n        eText.innerHTML = escapeString(dragItemName as string) || '';\n\n        this.eGhost.style.height = '25px';\n        this.eGhost.style.top = '20px';\n        this.eGhost.style.left = '20px';\n\n        const eDocument = this.gridOptionsWrapper.getDocument();\n        let targetEl: HTMLElement | null = null;\n\n        try {\n            targetEl = eDocument.fullscreenElement as HTMLElement | null;\n        } catch (e) {\n            // some environments like SalesForce will throw errors\n            // simply by trying to read the fullscreenElement property\n        } finally {\n            if (!targetEl) {\n                targetEl = eDocument.querySelector('body');\n            }\n        }\n\n        this.eGhostParent = targetEl as HTMLElement;\n\n        if (!this.eGhostParent) {\n            console.warn('AG Grid: could not find document body, it is needed for dragging columns');\n        } else {\n            this.eGhostParent.appendChild(this.eGhost);\n        }\n    }\n\n    public setGhostIcon(iconName: string | null, shake = false): void {\n        clearElement(this.eGhostIcon);\n\n        let eIcon: HTMLElement | null = null;\n\n        if (!iconName) {\n            iconName = this.dragSource.defaultIconName || DragAndDropService.ICON_NOT_ALLOWED;\n        }\n\n        switch (iconName) {\n            case DragAndDropService.ICON_PINNED:      eIcon = this.ePinnedIcon; break;\n            case DragAndDropService.ICON_MOVE:        eIcon = this.eMoveIcon; break;\n            case DragAndDropService.ICON_LEFT:        eIcon = this.eLeftIcon; break;\n            case DragAndDropService.ICON_RIGHT:       eIcon = this.eRightIcon; break;\n            case DragAndDropService.ICON_GROUP:       eIcon = this.eGroupIcon; break;\n            case DragAndDropService.ICON_AGGREGATE:   eIcon = this.eAggregateIcon; break;\n            case DragAndDropService.ICON_PIVOT:       eIcon = this.ePivotIcon; break;\n            case DragAndDropService.ICON_NOT_ALLOWED: eIcon = this.eDropNotAllowedIcon; break;\n            case DragAndDropService.ICON_HIDE:        eIcon = this.eHideIcon; break;\n        }\n\n        this.eGhostIcon.classList.toggle('ag-shake-left-to-right', shake);\n\n        if (eIcon === this.eHideIcon && this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns()) {\n            return;\n        }\n\n        if (eIcon) {\n            this.eGhostIcon.appendChild(eIcon);\n        }\n    }\n}\n"]}