{"version":3,"sources":["../../../src/ts/widgets/agSlider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,iEAAqD;AAErD,uDAA8E;AAE9E,uDAAoD;AACpD,gDAAmD;AAEnD,MAAa,QAAS,SAAQ,iCAAe;IAgBzC,YAAY,MAAiB;QACzB,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAH3B,mBAAc,GAAmB,KAAK,CAAC;IAIjD,CAAC;IAGO,IAAI;QACR,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAEM,aAAa,CAAC,UAAsC;QACvD,MAAM,YAAY,GAAG,iCAAe,CAAC,aAAa,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,GAAG,EAAE;YACnD,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAG,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;YAClD,UAAU,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE;YACrD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAG,CAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACvC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,cAAc,CAAC,KAAa;QAC/B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,iBAAiB,CAAC,KAAa;QAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,WAAW,CAAC,QAAgB;QAC/B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,WAAW,CAAC,QAAgB;QAC/B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IAEM,QAAQ,CAAC,KAAa;QACzB,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;YAC3B,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,iCAAe,CAAC,aAAa,EAAE,CAAC,CAAC;QAE5D,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,OAAO,CAAC,IAAY;QACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;;AArFc,iBAAQ,GACnB;;;;;;eAMO,CAAC;AAEW;IAAtB,kCAAW,CAAC,QAAQ,CAAC;wCAAwC;AACtC;IAAvB,kCAAW,CAAC,SAAS,CAAC;yCAAwC;AACzC;IAArB,kCAAW,CAAC,OAAO,CAAC;uCAA4C;AASjE;IADC,uBAAa;oCAGb;AAvBL,4BAuFC","file":"agSlider.js","sourcesContent":["import { RefSelector } from \"./componentAnnotations\";\nimport { AgInputRange } from \"./agInputRange\";\nimport { AgAbstractLabel, LabelAlignment, IAgLabel } from \"./agAbstractLabel\";\nimport { AgInputNumberField } from \"./agInputNumberField\";\nimport { AgAbstractField } from \"./agAbstractField\";\nimport { PostConstruct } from \"../context/context\";\n\nexport class AgSlider extends AgAbstractLabel {\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-slider\">\n            <label ref=\"eLabel\"></label>\n            <div class=\"ag-wrapper ag-slider-wrapper\">\n                <ag-input-range ref=\"eSlider\"></ag-input-range>\n                <ag-input-number-field ref=\"eText\"></ag-input-number-field>\n            </div>\n        </div>`;\n\n    @RefSelector('eLabel') protected readonly eLabel: HTMLElement;\n    @RefSelector('eSlider') private readonly eSlider: AgInputRange;\n    @RefSelector('eText') private readonly eText: AgInputNumberField;\n\n    protected labelAlignment: LabelAlignment = 'top';\n\n    constructor(config?: IAgLabel) {\n        super(config, AgSlider.TEMPLATE);\n    }\n\n    @PostConstruct\n    private init() {\n        this.eSlider.addCssClass('ag-slider-field');\n    }\n\n    public onValueChange(callbackFn: (newValue: number) => void) {\n        const eventChanged = AgAbstractField.EVENT_CHANGED;\n        this.addManagedListener(this.eText, eventChanged, () => {\n            const textValue = parseFloat(this.eText.getValue()!);\n            this.eSlider.setValue(textValue.toString(), true);\n            callbackFn(textValue || 0);\n        });\n\n        this.addManagedListener(this.eSlider, eventChanged, () => {\n            const sliderValue = this.eSlider.getValue()!;\n            this.eText.setValue(sliderValue, true);\n            callbackFn(parseFloat(sliderValue));\n        });\n\n        return this;\n    }\n\n    public setSliderWidth(width: number): this {\n        this.eSlider.setWidth(width);\n        return this;\n    }\n\n    public setTextFieldWidth(width: number): this {\n        this.eText.setWidth(width);\n        return this;\n    }\n\n    public setMinValue(minValue: number): this {\n        this.eSlider.setMinValue(minValue);\n        this.eText.setMin(minValue);\n\n        return this;\n    }\n\n    public setMaxValue(maxValue: number): this {\n        this.eSlider.setMaxValue(maxValue);\n        this.eText.setMax(maxValue);\n        return this;\n    }\n\n    public getValue(): string | null | undefined {\n        return this.eText.getValue();\n    }\n\n    public setValue(value: string): this {\n        if (this.getValue() === value) {\n            return this;\n        }\n\n        this.eText.setValue(value, true);\n        this.eSlider.setValue(value, true);\n\n        this.dispatchEvent({ type: AgAbstractField.EVENT_CHANGED });\n\n        return this;\n    }\n\n    public setStep(step: number): this {\n        this.eSlider.setStep(step);\n        this.eText.setStep(step);\n        return this;\n    }\n}\n"]}