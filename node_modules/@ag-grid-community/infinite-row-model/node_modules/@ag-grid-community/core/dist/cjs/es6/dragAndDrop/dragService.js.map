{"version":3,"sources":["../../../src/ts/dragAndDrop/dragService.ts"],"names":[],"mappings":"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","file":"dragService.js","sourcesContent":["import { Bean, PreDestroy, Autowired, PostConstruct } from \"../context/context\";\nimport { LoggerFactory, Logger } from \"../logger\";\nimport { DragStartedEvent, DragStoppedEvent, Events } from \"../events\";\nimport { ColumnApi } from \"../columns/columnApi\";\nimport { GridApi } from \"../gridApi\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { exists } from \"../utils/generic\";\nimport { removeFromArray } from \"../utils/array\";\nimport { areEventsNear } from \"../utils/mouse\";\nimport { MouseEventService } from \"../gridBodyComp/mouseEventService\";\nimport { isBrowserSafari } from \"../utils/browser\";\n\n/** Adds drag listening onto an element. In AG Grid this is used twice, first is resizing columns,\n * second is moving the columns and column groups around (ie the 'drag' part of Drag and Drop. */\n@Bean('dragService')\nexport class DragService extends BeanStub {\n\n    @Autowired('loggerFactory') private loggerFactory: LoggerFactory;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('mouseEventService') private mouseEventService: MouseEventService;\n\n    private currentDragParams: DragListenerParams | null;\n    private dragging: boolean;\n    private mouseStartEvent: MouseEvent | null;\n    private touchLastTime: Touch | null;\n    private touchStart: Touch | null;\n\n    private logger: Logger;\n\n    private dragEndFunctions: Function[] = [];\n\n    private dragSources: DragSourceAndListener[] = [];\n\n    @PostConstruct\n    private init(): void {\n        this.logger = this.loggerFactory.create('DragService');\n    }\n\n    @PreDestroy\n    private removeAllListeners(): void {\n        this.dragSources.forEach(this.removeListener.bind(this));\n        this.dragSources.length = 0;\n    }\n\n    private removeListener(dragSourceAndListener: DragSourceAndListener): void {\n        const element = dragSourceAndListener.dragSource.eElement;\n        const mouseDownListener = dragSourceAndListener.mouseDownListener;\n        element.removeEventListener('mousedown', mouseDownListener);\n\n        // remove touch listener only if it exists\n        if (dragSourceAndListener.touchEnabled) {\n            const touchStartListener = dragSourceAndListener.touchStartListener;\n            element.removeEventListener('touchstart', touchStartListener!, {passive:true} as any);\n        }\n    }\n\n    public removeDragSource(params: DragListenerParams): void {\n        const dragSourceAndListener = this.dragSources.find(item => item.dragSource === params);\n\n        if (!dragSourceAndListener) { return; }\n\n        this.removeListener(dragSourceAndListener);\n        removeFromArray(this.dragSources, dragSourceAndListener);\n    }\n\n    public isDragging(): boolean {\n        return this.dragging;\n    }\n\n    public addDragSource(params: DragListenerParams, includeTouch: boolean = false): void {\n        const mouseListener = this.onMouseDown.bind(this, params);\n        params.eElement.addEventListener('mousedown', mouseListener);\n\n        let touchListener: ((touchEvent: TouchEvent) => void) | null = null;\n\n        const suppressTouch = this.gridOptionsWrapper.isSuppressTouch();\n\n        if (includeTouch && !suppressTouch) {\n            touchListener = (touchEvent: TouchEvent) => {\n                if (touchEvent.cancelable) { touchEvent.preventDefault(); }\n                this.onTouchStart(params, touchEvent);\n            };\n            params.eElement.addEventListener('touchstart', touchListener, { passive: true });\n        }\n\n        this.dragSources.push({\n            dragSource: params,\n            mouseDownListener: mouseListener,\n            touchStartListener: touchListener,\n            touchEnabled: includeTouch\n        });\n    }\n\n    // gets called whenever mouse down on any drag source\n    private onTouchStart(params: DragListenerParams, touchEvent: TouchEvent): void {\n        this.currentDragParams = params;\n        this.dragging = false;\n\n        const touch = touchEvent.touches[0];\n\n        this.touchLastTime = touch;\n        this.touchStart = touch;\n\n        const touchMoveEvent = (e: TouchEvent) => this.onTouchMove(e, params.eElement);\n        const touchEndEvent = (e: TouchEvent) => this.onTouchUp(e, params.eElement);\n        const documentTouchMove = (e: TouchEvent) => { if (e.cancelable) { e.preventDefault(); } };\n        const target = params.eElement;\n\n        const events = [\n            // Prevents the page document from moving while we are dragging items around.\n            // preventDefault needs to be called in the touchmove listener and never inside the\n            // touchstart, because using touchstart causes the click event to be cancelled on touch devices.\n            { target: document, type: 'touchmove', listener: documentTouchMove, options: { passive: false } },\n            { target, type: 'touchmove', listener: touchMoveEvent, options: { passive: true } },\n            { target, type: 'touchend', listener: touchEndEvent, options: { passive: true} },\n            { target, type: 'touchcancel', listener: touchEndEvent, options: { passive: true} }\n        ];\n        // temporally add these listeners, for the duration of the drag\n        this.addTemporaryEvents(events);\n\n        // see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onCommonMove(touch, this.touchStart, params.eElement);\n        }\n    }\n\n    // gets called whenever mouse down on any drag source\n    private onMouseDown(params: DragListenerParams, mouseEvent: MouseEvent): void {\n        const e = mouseEvent as any;\n\n        if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n            return;\n        }\n\n        // if there are two elements with parent / child relationship, and both are draggable,\n        // when we drag the child, we should NOT drag the parent. an example of this is row moving\n        // and range selection - row moving should get preference when use drags the rowDrag component.\n        if (e._alreadyProcessedByDragService) { return; }\n\n        e._alreadyProcessedByDragService = true;\n\n        // only interested in left button clicks\n        if (mouseEvent.button !== 0) { return; }\n\n        this.currentDragParams = params;\n        this.dragging = false;\n\n        this.mouseStartEvent = mouseEvent;\n\n        const eDocument = this.gridOptionsWrapper.getDocument();\n\n        const mouseMoveEvent = (event: MouseEvent) => this.onMouseMove(event, params.eElement);\n        const mouseUpEvent = (event: MouseEvent) => this.onMouseUp(event, params.eElement);\n        const contextEvent = (event: MouseEvent) => event.preventDefault();\n        const target = eDocument;\n        const events = [\n            { target, type: 'mousemove', listener: mouseMoveEvent },\n            { target, type: 'mouseup', listener: mouseUpEvent },\n            { target, type: 'contextmenu', listener: contextEvent }\n        ];\n        // temporally add these listeners, for the duration of the drag\n        this.addTemporaryEvents(events);\n\n        //see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onMouseMove(mouseEvent, params.eElement);\n        }\n    }\n\n    private addTemporaryEvents(\n        events: {\n            target: HTMLElement | Document,\n            type: string,\n            listener: (e: MouseEvent | TouchEvent, el: HTMLElement) => void,\n            options?: any\n        }[]\n    ): void {\n        events.forEach((currentEvent) => {\n            const { target, type, listener, options } = currentEvent;\n            target.addEventListener(type, listener as any, options);\n        });\n\n        this.dragEndFunctions.push(() => {\n            events.forEach((currentEvent) => {\n                const { target, type, listener, options } = currentEvent;\n                target.removeEventListener(type, listener as any, options);\n            });\n        });\n    }\n\n    // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n    // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n    private isEventNearStartEvent(currentEvent: MouseEvent | Touch, startEvent: MouseEvent | Touch): boolean {\n        // by default, we wait 4 pixels before starting the drag\n        const { dragStartPixels } = this.currentDragParams!;\n        const requiredPixelDiff = exists(dragStartPixels) ? dragStartPixels : 4;\n        return areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n    }\n\n    private getFirstActiveTouch(touchList: TouchList): Touch | null {\n        for (let i = 0; i < touchList.length; i++) {\n            if (touchList[i].identifier === this.touchStart!.identifier) {\n                return touchList[i];\n            }\n        }\n        return null;\n    }\n\n    private onCommonMove(currentEvent: MouseEvent | Touch, startEvent: MouseEvent | Touch, el: HTMLElement): void {\n        if (!this.dragging) {\n            // if mouse hasn't travelled from the start position enough, do nothing\n            if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) { return; }\n\n            this.dragging = true;\n            const event: DragStartedEvent = {\n                type: Events.EVENT_DRAG_STARTED,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                target: el\n            };\n            this.eventService.dispatchEvent(event);\n\n            this.currentDragParams!.onDragStart(startEvent);\n            // we need ONE drag action at the startEvent, so that we are guaranteed the drop target\n            // at the start gets notified. this is because the drag can start outside of the element\n            // that started it, as the mouse is allowed drag away from the mouse down before it's\n            // considered a drag (the isEventNearStartEvent() above). if we didn't do this, then\n            // it would be possible to click a column by the edge, then drag outside of the drop zone\n            // in less than 4 pixels and the drag officially starts outside of the header but the header\n            // wouldn't be notified of the dragging.\n            this.currentDragParams!.onDragging(startEvent);\n        }\n\n        this.currentDragParams!.onDragging(currentEvent);\n    }\n\n    private onTouchMove(touchEvent: TouchEvent, el: HTMLElement): void {\n        const touch = this.getFirstActiveTouch(touchEvent.touches);\n        if (!touch) { return; }\n\n        // this.___statusPanel.setInfoText(Math.random() + ' onTouchMove preventDefault stopPropagation');\n        this.onCommonMove(touch, this.touchStart!, el);\n    }\n\n    // only gets called after a mouse down - as this is only added after mouseDown\n    // and is removed when mouseUp happens\n    private onMouseMove(mouseEvent: MouseEvent, el: HTMLElement): void {\n        // The event type can be `mousedown` when `dragStartPixels=0`\n        // we should only preventDefault on `mousemove`.\n        if (\n            isBrowserSafari() &&\n            mouseEvent.type === 'mousemove' &&\n            mouseEvent.cancelable &&\n            this.mouseEventService.isEventFromThisGrid(mouseEvent) &&\n            !this.isOverFormFieldElement(mouseEvent)\n         ) {\n            mouseEvent.preventDefault();\n        }\n        this.onCommonMove(mouseEvent, this.mouseStartEvent!, el);\n    }\n\n    private isOverFormFieldElement(mouseEvent: MouseEvent): boolean {\n        const el = mouseEvent.target as HTMLElement | null;\n        const tagName = el?.tagName.toLocaleLowerCase();\n\n        return !!tagName?.match('^a$|textarea|input|select|button');\n    }\n\n    public onTouchUp(touchEvent: TouchEvent, el: HTMLElement): void {\n        let touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n\n        // i haven't worked this out yet, but there is no matching touch\n        // when we get the touch up event. to get around this, we swap in\n        // the last touch. this is a hack to 'get it working' while we\n        // figure out what's going on, why we are not getting a touch in\n        // current event.\n        if (!touch) {\n            touch = this.touchLastTime;\n        }\n\n        // if mouse was left up before we started to move, then this is a tap.\n        // we check this before onUpCommon as onUpCommon resets the dragging\n        // let tap = !this.dragging;\n        // let tapTarget = this.currentDragParams.eElement;\n\n        this.onUpCommon(touch!, el);\n\n        // if tap, tell user\n        // console.log(`${Math.random()} tap = ${tap}`);\n        // if (tap) {\n        //     tapTarget.click();\n        // }\n    }\n\n    public onMouseUp(mouseEvent: MouseEvent, el: HTMLElement): void {\n        this.onUpCommon(mouseEvent, el);\n    }\n\n    public onUpCommon(eventOrTouch: MouseEvent | Touch, el: HTMLElement): void {\n        if (this.dragging) {\n            this.dragging = false;\n            this.currentDragParams!.onDragStop(eventOrTouch);\n            const event: DragStoppedEvent = {\n                type: Events.EVENT_DRAG_STOPPED,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                target: el\n            };\n            this.eventService.dispatchEvent(event);\n        }\n\n        this.mouseStartEvent = null;\n        this.touchStart = null;\n        this.touchLastTime = null;\n        this.currentDragParams = null;\n\n        this.dragEndFunctions.forEach(func => func());\n        this.dragEndFunctions.length = 0;\n    }\n}\n\ninterface DragSourceAndListener {\n    dragSource: DragListenerParams;\n    mouseDownListener: (mouseEvent: MouseEvent) => void;\n    touchEnabled: boolean;\n    touchStartListener: ((touchEvent: TouchEvent) => void) | null;\n}\n\nexport interface DragListenerParams {\n    /** After how many pixels of dragging should the drag operation start. Default is 4px. */\n    dragStartPixels?: number;\n    /** Dom element to add the drag handling to */\n    eElement: HTMLElement;\n    /** Some places may wish to ignore certain events, eg range selection ignores shift clicks */\n    skipMouseEvent?: (mouseEvent: MouseEvent) => boolean;\n    /** Callback for drag starting */\n    onDragStart: (mouseEvent: MouseEvent | Touch) => void;\n    /** Callback for drag stopping */\n    onDragStop: (mouseEvent: MouseEvent | Touch) => void;\n    /** Callback for mouse move while dragging */\n    onDragging: (mouseEvent: MouseEvent | Touch) => void;\n}\n"]}