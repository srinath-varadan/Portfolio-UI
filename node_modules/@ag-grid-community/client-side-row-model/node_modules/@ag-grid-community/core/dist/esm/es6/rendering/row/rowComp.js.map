{"version":3,"sources":["../../../src/ts/rendering/row/rowComp.ts"],"names":[],"mappings":"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","file":"rowComp.js","sourcesContent":["import { Component } from \"../../widgets/component\";\nimport { ICellRendererComp } from \"../cellRenderers/iCellRenderer\";\nimport { Beans } from \"../beans\";\nimport { addStylesToElement, setDomChildOrder } from \"../../utils/dom\";\nimport { IRowComp, RowCtrl, RowType } from \"./rowCtrl\";\nimport { CellComp } from \"../cell/cellComp\";\nimport { getAllValuesInObject } from \"../../utils/object\";\nimport { setAriaRole } from \"../../utils/aria\";\nimport { CellCtrl } from \"../cell/cellCtrl\";\nimport { UserCompDetails } from \"../../components/framework/userComponentFactory\";\nimport { RowContainerType } from \"../../gridBodyComp/rowContainer/rowContainerCtrl\";\n\nexport class RowComp extends Component {\n\n    private fullWidthCellRenderer: ICellRendererComp | null | undefined;\n\n    private beans: Beans;\n\n    private rowCtrl: RowCtrl;\n\n    private domOrder: boolean;\n    private cellComps: { [key: string]: CellComp | null; } = {};\n\n    constructor(ctrl: RowCtrl, beans: Beans, containerType: RowContainerType) {\n        super();\n\n        this.beans = beans;\n        this.rowCtrl = ctrl;\n\n        this.setTemplate(/* html */`<div comp-id=\"${this.getCompId()}\" style=\"${this.getInitialStyle()}\"/>`);\n\n        const eGui = this.getGui();\n        const style = eGui.style;\n\n        const compProxy: IRowComp = {\n            setDomOrder: domOrder => this.domOrder = domOrder,\n            setCellCtrls: cellCtrls => this.setCellCtrls(cellCtrls),\n            showFullWidth: compDetails => this.showFullWidth(compDetails),\n            getFullWidthCellRenderer: () => this.getFullWidthCellRenderer(),\n            addOrRemoveCssClass: (name, on) => this.addOrRemoveCssClass(name, on),\n            setUserStyles: styles => addStylesToElement(eGui, styles),\n            setTop: top => style.top = top,\n            setTransform: transform => style.transform = transform,\n            setRowIndex: rowIndex => eGui.setAttribute('row-index', rowIndex),\n            setRole: role => setAriaRole(eGui, role),\n            setRowId: (rowId: string) => eGui.setAttribute('row-id', rowId),\n            setRowBusinessKey: businessKey => eGui.setAttribute('row-business-key', businessKey),\n            setTabIndex: tabIndex => eGui.setAttribute('tabindex', tabIndex.toString())\n        };\n\n        ctrl.setComp(compProxy, this.getGui(), containerType);\n    }\n\n    private getInitialStyle(): string {\n        const transform = this.rowCtrl.getInitialTransform();\n        const top = this.rowCtrl.getInitialRowTop();\n        return transform ? `transform: ${transform}` : `top: ${top}`;\n    }\n\n    private showFullWidth(compDetails: UserCompDetails): void {\n        const callback = (cellRenderer: ICellRendererComp) => {\n            if (this.isAlive()) {\n                const eGui = cellRenderer.getGui();\n                this.getGui().appendChild(eGui);\n                this.rowCtrl.setupDetailRowAutoHeight(eGui);\n                this.setFullWidthRowComp(cellRenderer);\n            } else {\n                this.beans.context.destroyBean(cellRenderer);\n            }\n        };\n\n        // if not in cache, create new one\n        const res = compDetails.newAgStackInstance();\n\n        if (!res) { return; }\n\n        res.then(callback);\n    }\n\n    private setCellCtrls(cellCtrls: CellCtrl[]): void {\n        const cellsToRemove = Object.assign({}, this.cellComps);\n\n        cellCtrls.forEach(cellCtrl => {\n            const key = cellCtrl.getInstanceId();\n            const existingCellComp = this.cellComps[key];\n\n            if (existingCellComp == null) {\n                this.newCellComp(cellCtrl);\n            } else {\n                cellsToRemove[key] = null;\n            }\n        });\n\n        const cellCompsToRemove = getAllValuesInObject(cellsToRemove)\n            .filter(cellComp => cellComp != null);\n\n        this.destroyCells(cellCompsToRemove as CellComp[]);\n        this.ensureDomOrder(cellCtrls);\n    }\n\n    private ensureDomOrder(cellCtrls: CellCtrl[]): void {\n        if (!this.domOrder) { return; }\n\n        const elementsInOrder: HTMLElement[] = [];\n        cellCtrls.forEach(cellCtrl => {\n            const cellComp = this.cellComps[cellCtrl.getInstanceId()];\n            if (cellComp) {\n                elementsInOrder.push(cellComp.getGui());\n            }\n        });\n\n        setDomChildOrder(this.getGui(), elementsInOrder);\n    }\n\n    private newCellComp(cellCtrl: CellCtrl): void {\n        const cellComp = new CellComp(this.beans, cellCtrl,\n            this.rowCtrl.isPrintLayout(), this.getGui(), this.rowCtrl.isEditing());\n        this.cellComps[cellCtrl.getInstanceId()] = cellComp;\n        this.getGui().appendChild(cellComp.getGui());\n    }\n\n    public destroy(): void {\n        super.destroy();\n        this.destroyAllCells();\n    }\n\n    private destroyAllCells(): void {\n        const cellsToDestroy = getAllValuesInObject(this.cellComps).filter(cp => cp != null);\n        this.destroyCells(cellsToDestroy as CellComp[]);\n    }\n\n    private setFullWidthRowComp(fullWidthRowComponent: ICellRendererComp): void {\n        if (this.fullWidthCellRenderer) {\n            console.error('AG Grid - should not be setting fullWidthRowComponent twice');\n        }\n\n        this.fullWidthCellRenderer = fullWidthRowComponent;\n        this.addDestroyFunc(() => {\n            this.fullWidthCellRenderer = this.beans.context.destroyBean(this.fullWidthCellRenderer);\n        });\n    }\n\n    private getFullWidthCellRenderer(): ICellRendererComp | null | undefined {\n        return this.fullWidthCellRenderer;\n    }\n\n    private destroyCells(cellComps: CellComp[]): void {\n        cellComps.forEach(cellComp => {\n\n            // could be old reference, ie removed cell\n            if (!cellComp) { return; }\n\n            // check cellComp belongs in this container\n            const instanceId = cellComp.getCtrl().getInstanceId();\n            if (this.cellComps[instanceId] !== cellComp) {return; }\n\n            cellComp.detach();\n            cellComp.destroy();\n            this.cellComps[instanceId] = null;\n        });\n    }\n}\n"]}