{"version":3,"sources":["../../../src/ts/filter/floating/provided/textInputFloatingFilter.ts"],"names":[],"mappings":"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","file":"textInputFloatingFilter.js","sourcesContent":["import { IFloatingFilterParams } from '../floatingFilter';\nimport { RefSelector } from '../../../widgets/componentAnnotations';\nimport { IFilterOptionDef, ProvidedFilterModel } from '../../../interfaces/iFilter';\nimport { debounce } from '../../../utils/function';\nimport { ProvidedFilter } from '../../provided/providedFilter';\nimport { PostConstruct, Autowired } from '../../../context/context';\nimport { SimpleFloatingFilter } from './simpleFloatingFilter';\nimport { SimpleFilter } from '../../provided/simpleFilter';\nimport { FilterChangedEvent } from '../../../events';\nimport { AgInputTextField } from '../../../widgets/agInputTextField';\nimport { ColumnModel } from '../../../columns/columnModel';\nimport { KeyCode } from '../../../constants/keyCode';\nimport { ITextFilterParams, TextFilter, TextFilterModel } from '../../provided/text/textFilter';\nimport { NumberFilterModel, INumberFilterParams } from '../../provided/number/numberFilter';\n\ntype ModelUnion = TextFilterModel | NumberFilterModel;\nexport abstract class TextInputFloatingFilter<M extends ModelUnion> extends SimpleFloatingFilter {\n    @Autowired('columnModel') private readonly columnModel: ColumnModel;\n    @RefSelector('eFloatingFilterInput') private readonly eFloatingFilterInput: AgInputTextField;\n\n    protected params: IFloatingFilterParams;\n\n    private applyActive: boolean;\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.resetTemplate();\n    }\n\n    private resetTemplate(paramsMap?: any) {\n        this.setTemplate(/* html */`\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field ref=\"eFloatingFilterInput\"></ag-input-text-field>\n            </div>\n        `, paramsMap);\n    }\n\n    protected getDefaultDebounceMs(): number {\n        return 500;\n    }\n\n    public onParentModelChanged(model: ProvidedFilterModel, event: FilterChangedEvent): void {\n        if (this.isEventFromFloatingFilter(event)) {\n            // if the floating filter triggered the change, it is already in sync\n            return;\n        }\n\n        this.setLastTypeFromModel(model);\n        this.eFloatingFilterInput.setValue(this.getTextFromModel(model));\n        this.setEditable(this.canWeEditAfterModelFromParentFilter(model));\n    }\n\n    public init(params: IFloatingFilterParams): void {\n        super.init(params);\n\n        this.params = params;\n        this.applyActive = ProvidedFilter.isUseApplyButton(this.params.filterParams);\n\n        const { allowedCharPattern } = this.params.filterParams as INumberFilterParams;\n        if (allowedCharPattern != null) {\n            this.resetTemplate({ eFloatingFilterInput: { allowedCharPattern } });\n        }\n\n        if (!this.isReadOnly()) {\n            const debounceMs = ProvidedFilter.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n            const toDebounce: () => void = debounce(this.syncUpWithParentFilter.bind(this), debounceMs);\n            const filterGui = this.eFloatingFilterInput.getGui();\n\n            this.addManagedListener(filterGui, 'input', toDebounce);\n            this.addManagedListener(filterGui, 'keypress', toDebounce);\n            this.addManagedListener(filterGui, 'keydown', toDebounce);\n        }\n\n        const columnDef = (params.column.getDefinition() as any);\n\n        if (this.isReadOnly() || (\n            columnDef.filterParams &&\n            columnDef.filterParams.filterOptions &&\n            columnDef.filterParams.filterOptions.length === 1 &&\n            columnDef.filterParams.filterOptions[0] === 'inRange')) {\n            this.eFloatingFilterInput.setDisabled(true);\n        }\n\n        const displayName = this.columnModel.getDisplayNameForColumn(params.column, 'header', true);\n        const translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        this.eFloatingFilterInput.setInputAriaLabel(`${displayName} ${translate('ariaFilterInput', 'Filter Input')}`);\n    }\n\n    private syncUpWithParentFilter(e: KeyboardEvent): void {\n        const enterKeyPressed = e.key === KeyCode.ENTER;\n\n        if (this.applyActive && !enterKeyPressed) { return; }\n\n        let value = this.eFloatingFilterInput.getValue();\n\n        if ((this.params.filterParams as ITextFilterParams).trimInput) {\n            value = TextFilter.trimInput(value);\n            this.eFloatingFilterInput.setValue(value, true); // ensure visible value is trimmed\n        }\n\n        this.params.parentFilterInstance(filterInstance => {\n            if (filterInstance) {\n                filterInstance.onFloatingFilterChanged(this.getLastType() || null, value || null);\n            }\n        });\n    }\n\n    protected conditionToString(condition: M, options?: IFilterOptionDef): string {\n        const { numberOfInputs } = options || {};\n        const isRange = condition.type == SimpleFilter.IN_RANGE || numberOfInputs === 2;\n\n        if (isRange) {\n            return `${condition.filter}-${condition.filterTo}`;\n        }\n\n        // cater for when the type doesn't need a value\n        if (condition.filter != null) {\n            return `${condition.filter}`;\n        }\n\n        return `${condition.type}`;\n    }\n\n    protected setEditable(editable: boolean): void {\n        this.eFloatingFilterInput.setDisabled(!editable);\n    }\n}\n"]}