{"version":3,"sources":["../../../src/ts/context/context.ts"],"names":[],"mappings":"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","file":"context.js","sourcesContent":["import { ILogger } from \"../iLogger\";\nimport { Component } from \"../widgets/component\";\nimport { exists, values } from \"../utils/generic\";\nimport { iterateObject } from \"../utils/object\";\nimport { getFunctionName } from \"../utils/function\";\n\n// steps in booting up:\n// 1. create all beans\n// 2. autowire all attributes\n// 3. wire all beans\n// 4. initialise the model\n// 5. initialise the view\n// 6. boot??? (not sure if this is needed)\n// each bean is responsible for initialising itself, taking items from the gridOptionsWrapper\n\nexport interface ContextParams {\n    providedBeanInstances: any;\n    beanClasses: any[];\n    debug: boolean;\n}\n\nexport interface ComponentMeta {\n    componentClass: new () => Object;\n    componentName: string;\n}\n\nexport interface ControllerMeta {\n    controllerClass: new () => Object;\n    controllerName: string;\n}\n\ninterface BeanWrapper {\n    bean: any;\n    beanInstance: any;\n    beanName: any;\n}\n\nexport class Context {\n\n    private beanWrappers: { [key: string]: BeanWrapper; } = {};\n    private contextParams: ContextParams;\n    private logger: ILogger;\n\n    private destroyed = false;\n\n    public constructor(params: ContextParams, logger: ILogger) {\n        if (!params || !params.beanClasses) {\n            return;\n        }\n\n        this.contextParams = params;\n\n        this.logger = logger;\n        this.logger.log(\">> creating ag-Application Context\");\n\n        this.createBeans();\n\n        const beanInstances = this.getBeanInstances();\n\n        this.wireBeans(beanInstances);\n\n        this.logger.log(\">> ag-Application Context ready - component is alive\");\n    }\n\n    private getBeanInstances(): any[] {\n        return values(this.beanWrappers).map(beanEntry => beanEntry.beanInstance);\n    }\n\n    public createBean<T extends any>(bean: T, afterPreCreateCallback?: (comp: Component) => void): T {\n        if (!bean) {\n            throw Error(`Can't wire to bean since it is null`);\n        }\n        this.wireBeans([bean], afterPreCreateCallback);\n        return bean;\n    }\n\n    private wireBeans(beanInstances: any[], afterPreCreateCallback?: (comp: Component) => void): void {\n        this.autoWireBeans(beanInstances);\n        this.methodWireBeans(beanInstances);\n\n        this.callLifeCycleMethods(beanInstances, 'preConstructMethods');\n\n        // the callback sets the attributes, so the component has access to attributes\n        // before postConstruct methods in the component are executed\n        if (exists(afterPreCreateCallback)) {\n            beanInstances.forEach(afterPreCreateCallback);\n        }\n\n        this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n    }\n\n    private createBeans(): void {\n        // register all normal beans\n        this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this));\n        // register override beans, these will overwrite beans above of same name\n\n        // instantiate all beans - overridden beans will be left out\n        iterateObject(this.beanWrappers, (key: string, beanEntry: BeanWrapper) => {\n            let constructorParamsMeta: any;\n            if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n                constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n            }\n            const constructorParams = this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n            const newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n            beanEntry.beanInstance = newInstance;\n        });\n\n        const createdBeanNames = Object.keys(this.beanWrappers).join(', ');\n        this.logger.log(`created beans: ${createdBeanNames}`);\n    }\n\n    // tslint:disable-next-line\n    private createBeanWrapper(BeanClass: new () => Object): void {\n        const metaData = (BeanClass as any).__agBeanMetaData;\n\n        if (!metaData) {\n            let beanName: string;\n            if (BeanClass.prototype.constructor) {\n                beanName = getFunctionName(BeanClass.prototype.constructor);\n            } else {\n                beanName = \"\" + BeanClass;\n            }\n            console.error(`Context item ${beanName} is not a bean`);\n            return;\n        }\n\n        const beanEntry = {\n            bean: BeanClass,\n            beanInstance: null as any,\n            beanName: metaData.beanName\n        };\n\n        this.beanWrappers[metaData.beanName] = beanEntry;\n    }\n\n    private autoWireBeans(beanInstances: any[]): void {\n        beanInstances.forEach(beanInstance => {\n            this.forEachMetaDataInHierarchy(beanInstance, (metaData: any, beanName: string) => {\n                const attributes = metaData.agClassAttributes;\n                if (!attributes) {\n                    return;\n                }\n\n                attributes.forEach((attribute: any) => {\n                    const otherBean = this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n                    beanInstance[attribute.attributeName] = otherBean;\n                });\n            });\n        });\n    }\n\n    private methodWireBeans(beanInstances: any[]): void {\n        beanInstances.forEach(beanInstance => {\n            this.forEachMetaDataInHierarchy(beanInstance, (metaData: any, beanName: string) => {\n                iterateObject(metaData.autowireMethods, (methodName: string, wireParams: any[]) => {\n                    // skip constructor, as this is dealt with elsewhere\n                    if (methodName === \"agConstructor\") {\n                        return;\n                    }\n                    const initParams = this.getBeansForParameters(wireParams, beanName);\n                    beanInstance[methodName].apply(beanInstance, initParams);\n                });\n            });\n        });\n    }\n\n    private forEachMetaDataInHierarchy(beanInstance: any, callback: (metaData: any, beanName: string) => void): void {\n\n        let prototype: any = Object.getPrototypeOf(beanInstance);\n        while (prototype != null) {\n\n            const constructor: any = prototype.constructor;\n\n            if (constructor.hasOwnProperty('__agBeanMetaData')) {\n                const metaData = constructor.__agBeanMetaData;\n                const beanName = this.getBeanName(constructor);\n                callback(metaData, beanName);\n            }\n\n            prototype = Object.getPrototypeOf(prototype);\n        }\n    }\n\n    private getBeanName(constructor: any): string {\n        if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n            return constructor.__agBeanMetaData.beanName;\n        }\n\n        const constructorString = constructor.toString();\n        const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n        return beanName;\n    }\n\n    private getBeansForParameters(parameters: any, beanName: string): any[] {\n        const beansList: any[] = [];\n        if (parameters) {\n            iterateObject(parameters, (paramIndex: string, otherBeanName: string) => {\n                const otherBean = this.lookupBeanInstance(beanName, otherBeanName);\n                beansList[Number(paramIndex)] = otherBean;\n            });\n        }\n        return beansList;\n    }\n\n    private lookupBeanInstance(wiringBean: string, beanName: string, optional = false): any {\n        if (beanName === \"context\") {\n            return this;\n        }\n\n        if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(beanName)) {\n            return this.contextParams.providedBeanInstances[beanName];\n        }\n\n        const beanEntry = this.beanWrappers[beanName];\n\n        if (beanEntry) {\n            return beanEntry.beanInstance;\n        }\n\n        if (!optional) {\n            console.error(`AG Grid: unable to find bean reference ${beanName} while initialising ${wiringBean}`);\n        }\n\n        return null;\n    }\n\n    private callLifeCycleMethods(beanInstances: any[], lifeCycleMethod: string): void {\n        beanInstances.forEach(beanInstance => this.callLifeCycleMethodsOnBean(beanInstance, lifeCycleMethod));\n    }\n\n    private callLifeCycleMethodsOnBean(beanInstance: any, lifeCycleMethod: string, methodToIgnore?: string): void {\n        // putting all methods into a map removes duplicates\n        const allMethods: { [methodName: string]: boolean; } = {};\n\n        // dump methods from each level of the metadata hierarchy\n        this.forEachMetaDataInHierarchy(beanInstance, (metaData: any) => {\n            const methods = metaData[lifeCycleMethod] as string[];\n            if (methods) {\n                methods.forEach(methodName => {\n                    if (methodName != methodToIgnore) {\n                        allMethods[methodName] = true;\n                    }\n                });\n            }\n        });\n\n        const allMethodsList = Object.keys(allMethods);\n        allMethodsList.forEach(methodName => beanInstance[methodName]());\n    }\n\n    public getBean(name: string): any {\n        return this.lookupBeanInstance(\"getBean\", name, true);\n    }\n\n    public destroy(): void {\n        if (this.destroyed) { return; }\n\n        this.logger.log(\">> Shutting down ag-Application Context\");\n\n        const beanInstances = this.getBeanInstances();\n        this.destroyBeans(beanInstances);\n\n        this.contextParams.providedBeanInstances = null;\n        this.destroyed = true;\n\n        this.logger.log(\">> ag-Application Context shut down - component is dead\");\n    }\n\n    public destroyBean<T>(bean: T): undefined {\n        if (!bean) { return; }\n\n        this.destroyBeans([bean]);\n    }\n\n    public destroyBeans<T>(beans: T[]): T[] {\n        if (!beans) { return []; }\n\n        beans.forEach(bean => {\n            this.callLifeCycleMethodsOnBean(bean, 'preDestroyMethods', 'destroy');\n\n            // call destroy() explicitly if it exists\n            const beanAny = bean as any;\n\n            if (typeof beanAny.destroy === 'function') {\n                beanAny.destroy();\n            }\n        });\n\n        return [];\n    }\n}\n\n// taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\nfunction applyToConstructor(constructor: Function, argArray: any[]) {\n    const args = [null].concat(argArray);\n    const factoryFunction = constructor.bind.apply(constructor, args);\n    return new factoryFunction();\n}\n\nexport function PreConstruct(target: Object, methodName: string, descriptor: TypedPropertyDescriptor<any>): void {\n    const props = getOrCreateProps(target.constructor);\n    if (!props.preConstructMethods) {\n        props.preConstructMethods = [];\n    }\n    props.preConstructMethods.push(methodName);\n}\n\nexport function PostConstruct(target: Object, methodName: string, descriptor: TypedPropertyDescriptor<any>): void {\n    const props = getOrCreateProps(target.constructor);\n    if (!props.postConstructMethods) {\n        props.postConstructMethods = [];\n    }\n    props.postConstructMethods.push(methodName);\n}\n\nexport function PreDestroy(target: Object, methodName: string, descriptor: TypedPropertyDescriptor<any>): void {\n    const props = getOrCreateProps(target.constructor);\n    if (!props.preDestroyMethods) {\n        props.preDestroyMethods = [];\n    }\n    props.preDestroyMethods.push(methodName);\n}\n\nexport function Bean(beanName: string): Function {\n    return (classConstructor: any) => {\n        const props = getOrCreateProps(classConstructor);\n        props.beanName = beanName;\n    };\n}\n\nexport function Autowired(name?: string): Function {\n    return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n        autowiredFunc(target, name, false, target, propertyKey, null);\n    };\n}\n\nexport function Optional(name?: string): Function {\n    return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n        autowiredFunc(target, name, true, target, propertyKey, null);\n    };\n}\n\nfunction autowiredFunc(target: any, name: string | undefined, optional: boolean, classPrototype: any, methodOrAttributeName: string, index: number | null) {\n    if (name === null) {\n        console.error(\"AG Grid: Autowired name should not be null\");\n        return;\n    }\n    if (typeof index === \"number\") {\n        console.error(\"AG Grid: Autowired should be on an attribute\");\n        return;\n    }\n\n    // it's an attribute on the class\n    const props = getOrCreateProps(target.constructor);\n    if (!props.agClassAttributes) {\n        props.agClassAttributes = [];\n    }\n    props.agClassAttributes.push({\n        attributeName: methodOrAttributeName,\n        beanName: name,\n        optional: optional\n    });\n}\n\nexport function Qualifier(name: string): Function {\n    return (classPrototype: any, methodOrAttributeName: string, index: number) => {\n        const constructor: any = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n        let props: any;\n\n        if (typeof index === \"number\") {\n            // it's a parameter on a method\n            let methodName: string;\n            if (methodOrAttributeName) {\n                props = getOrCreateProps(constructor);\n                methodName = methodOrAttributeName;\n            } else {\n                props = getOrCreateProps(constructor);\n                methodName = \"agConstructor\";\n            }\n            if (!props.autowireMethods) {\n                props.autowireMethods = {};\n            }\n            if (!props.autowireMethods[methodName]) {\n                props.autowireMethods[methodName] = {};\n            }\n            props.autowireMethods[methodName][index] = name;\n        }\n    };\n}\n\nfunction getOrCreateProps(target: any): any {\n    if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n        target.__agBeanMetaData = {};\n    }\n\n    return target.__agBeanMetaData;\n}\n"]}