{"version":3,"sources":["../../../src/ts/headerRendering/cells/column/standardMenu.ts"],"names":[],"mappings":"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","file":"standardMenu.js","sourcesContent":["import { Autowired, Bean } from '../../../context/context';\nimport { BeanStub } from \"../../../context/beanStub\";\nimport { IMenuFactory } from '../../../interfaces/iMenuFactory';\nimport { FilterManager } from '../../../filter/filterManager';\nimport { Column } from '../../../entities/column';\nimport { PopupService } from '../../../widgets/popupService';\nimport { FocusService } from '../../../focusService';\nimport { isVisible } from '../../../utils/dom';\nimport { KeyCode } from '../../../constants/keyCode';\nimport { ContainerType } from '../../../interfaces/iAfterGuiAttachedParams';\nimport { CtrlsService } from '../../../ctrlsService';\nimport { setAriaRole } from '../../../utils/aria';\n\n@Bean('menuFactory')\nexport class StandardMenuFactory extends BeanStub implements IMenuFactory {\n\n    @Autowired('filterManager') private filterManager: FilterManager;\n    @Autowired('popupService') private popupService: PopupService;\n    @Autowired('focusService') private focusService: FocusService;\n    @Autowired('ctrlsService') private ctrlsService: CtrlsService;\n\n    private hidePopup: () => void;\n    private tabListener: () => null;\n\n    public hideActiveMenu(): void {\n        if (this.hidePopup) {\n            this.hidePopup();\n        }\n    }\n\n    public showMenuAfterMouseEvent(column: Column, mouseEvent: MouseEvent | Touch): void {\n        this.showPopup(column, eMenu => {\n            this.popupService.positionPopupUnderMouseEvent({\n                column,\n                type: 'columnMenu',\n                mouseEvent,\n                ePopup: eMenu\n            });\n        }, mouseEvent.target as HTMLElement);\n    }\n\n    public showMenuAfterButtonClick(column: Column, eventSource: HTMLElement, containerType: ContainerType): void {\n        this.showPopup(column, eMenu => {\n            this.popupService.positionPopupUnderComponent({\n                type: containerType,\n                eventSource,\n                ePopup: eMenu,\n                keepWithinBounds: true,\n                column\n            });\n        }, eventSource);\n    }\n\n    public showPopup(column: Column, positionCallback: (eMenu: HTMLElement) => void, eventSource: HTMLElement): void {\n        const filterWrapper = this.filterManager.getOrCreateFilterWrapper(column, 'COLUMN_MENU');\n        if (!filterWrapper) {\n            throw new Error('AG Grid - unable to show popup filter, filter instantiation failed');\n        }\n\n        const eMenu = document.createElement('div');\n\n        setAriaRole(eMenu, 'presentation');\n        eMenu.classList.add('ag-menu');\n\n        this.tabListener = this.addManagedListener(eMenu, 'keydown', (e) => this.trapFocusWithin(e, eMenu))!;\n\n        filterWrapper.guiPromise.then(gui => eMenu.appendChild(gui!));\n\n        let hidePopup: (() => void);\n\n        const anchorToElement = eventSource || this.ctrlsService.getGridBodyCtrl().getGui();\n        const closedCallback = (e: MouseEvent | TouchEvent | KeyboardEvent) => {\n            column.setMenuVisible(false, 'contextMenu');\n            const isKeyboardEvent = e instanceof KeyboardEvent;\n\n            if (this.tabListener) {\n                this.tabListener = this.tabListener()!;\n            }\n\n            if (isKeyboardEvent && eventSource && isVisible(eventSource)) {\n                const focusableEl = this.focusService.findTabbableParent(eventSource);\n\n                if (focusableEl) { focusableEl.focus(); }\n            }\n        };\n\n        const translate = this.gridOptionsWrapper.getLocaleTextFunc();\n\n        const addPopupRes = this.popupService.addPopup({\n            modal: true,\n            eChild: eMenu,\n            closeOnEsc: true,\n            closedCallback,\n            positionCallback: () => positionCallback(eMenu),\n            anchorToElement,\n            ariaLabel: translate('ariaLabelColumnMenu', 'Column Menu')\n        });\n\n        if (addPopupRes) {\n            this.hidePopup = hidePopup = addPopupRes.hideFunc;\n        }\n\n        filterWrapper.filterPromise!.then(filter => {\n            // need to make sure the filter is present before positioning, as only\n            // after filter it is visible can we find out what the width of it is\n            positionCallback(eMenu);\n\n            if (filter!.afterGuiAttached) {\n                filter!.afterGuiAttached({ container: 'columnMenu', hidePopup });\n            }\n        });\n\n        column.setMenuVisible(true, 'contextMenu');\n    }\n\n    private trapFocusWithin(e: KeyboardEvent, menu: HTMLElement) {\n        if (e.key !== KeyCode.TAB ||\n            e.defaultPrevented ||\n            this.focusService.findNextFocusableElement(menu, false, e.shiftKey)) {\n            return;\n        }\n\n        e.preventDefault();\n\n        this.focusService.focusInto(menu, e.shiftKey);\n    }\n\n    public isMenuEnabled(column: Column): boolean {\n        // for standard, we show menu if filter is enabled, and the menu is not suppressed\n        return column.isFilterAllowed();\n    }\n}\n"]}