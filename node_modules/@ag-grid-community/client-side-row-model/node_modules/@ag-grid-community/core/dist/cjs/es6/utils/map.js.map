{"version":3,"sources":["../../../src/ts/utils/map.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAgB,YAAY,CAAO,GAAa;IAC5C,MAAM,GAAG,GAAG,IAAI,GAAG,EAAQ,CAAC;IAE5B,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/C,OAAO,GAAG,CAAC;AACf,CAAC;AAND,oCAMC;AAED,8GAA8G;AAC9G,SAAgB,OAAO,CAAI,GAAQ,EAAE,QAA4B;IAC7D,MAAM,GAAG,GAAG,IAAI,GAAG,EAAa,CAAC;IAEjC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAEnD,OAAO,GAAG,CAAC;AACf,CAAC;AAND,0BAMC;AAED,SAAgB,IAAI,CAAI,GAAgB;IACpC,MAAM,GAAG,GAAQ,EAAE,CAAC;IAEpB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAEvC,OAAO,GAAG,CAAC;AACf,CAAC;AAND,oBAMC","file":"map.js","sourcesContent":["export function convertToMap<K, V>(arr: [K, V][]): Map<K, V> {\n    const map = new Map<K, V>();\n\n    arr.forEach(pair => map.set(pair[0], pair[1]));\n\n    return map;\n}\n\n// handy for organising a list into a map, where each item is mapped by an attribute, eg mapping Columns by ID\nexport function mapById<V>(arr: V[], callback: (obj: V) => string): Map<string, V> {\n    const map = new Map<string, V>();\n\n    arr.forEach(item => map.set(callback(item), item));\n\n    return map;\n}\n\nexport function keys<T>(map: Map<T, any>): T[] {\n    const arr: T[] = [];\n\n    map.forEach((_, key) => arr.push(key));\n\n    return arr;\n}"]}