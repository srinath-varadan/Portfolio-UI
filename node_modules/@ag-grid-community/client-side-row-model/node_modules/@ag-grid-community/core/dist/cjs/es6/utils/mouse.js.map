{"version":3,"sources":["../../../src/ts/utils/mouse.ts"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;GAOG;AACH,SAAgB,aAAa,CAAC,EAAsB,EAAE,EAAsB,EAAE,UAAkB;IAC5F,wDAAwD;IACxD,IAAI,UAAU,KAAK,CAAC,EAAE;QAAE,OAAO,KAAK,CAAC;KAAE;IAEvC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;IAEhD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,UAAU,CAAC;AAChD,CAAC;AARD,sCAQC","file":"mouse.js","sourcesContent":["/**\n * `True` if the event is close to the original event by X pixels either vertically or horizontally.\n * we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n * @param {MouseEvent | TouchEvent} e1\n * @param {MouseEvent | TouchEvent} e2\n * @param {number} pixelCount\n * @returns {boolean}\n */\nexport function areEventsNear(e1: MouseEvent | Touch, e2: MouseEvent | Touch, pixelCount: number): boolean {\n    // by default, we wait 4 pixels before starting the drag\n    if (pixelCount === 0) { return false; }\n\n    const diffX = Math.abs(e1.clientX - e2.clientX);\n    const diffY = Math.abs(e1.clientY - e2.clientY);\n\n    return Math.max(diffX, diffY) <= pixelCount;\n}\n"]}