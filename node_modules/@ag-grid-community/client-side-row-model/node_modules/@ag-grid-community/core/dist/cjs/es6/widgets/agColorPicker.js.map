{"version":3,"sources":["../../../src/ts/widgets/agColorPicker.ts"],"names":[],"mappings":"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","file":"agColorPicker.js","sourcesContent":["import { AgColorPanel } from \"./agColorPanel\";\nimport { AgDialog } from \"./agDialog\";\nimport { IAgLabel } from \"./agAbstractLabel\";\nimport { AgPickerField } from \"./agPickerField\";\nimport { setAriaExpanded } from \"../utils/aria\";\n\ninterface ColorPickerConfig extends IAgLabel {\n    color: string;\n}\n\nexport class AgColorPicker extends AgPickerField<HTMLElement, string> {\n    constructor(config?: ColorPickerConfig) {\n        super(config, 'ag-color-picker', 'colorPicker');\n\n        if (config && config.color) {\n            this.value = config.color;\n        }\n    }\n\n    protected postConstruct() {\n        super.postConstruct();\n\n        if (this.value) {\n            this.setValue(this.value);\n        }\n    }\n\n    public showPicker() {\n        const eGuiRect = this.getGui().getBoundingClientRect();\n        const colorDialog = this.createBean(new AgDialog({\n            closable: false,\n            modal: true,\n            hideTitleBar: true,\n            minWidth: 190,\n            width: 190,\n            height: 250,\n            x: eGuiRect.right - 190,\n            y: eGuiRect.top - 250\n        }));\n\n        this.isPickerDisplayed = true;\n\n        colorDialog.addCssClass('ag-color-dialog');\n        setAriaExpanded(this.eWrapper, true);\n\n        const colorPanel = this.createBean(new AgColorPanel({ picker: this }));\n\n        colorPanel.addDestroyFunc(() => {\n            if (colorDialog.isAlive()) {\n                this.destroyBean(colorDialog);\n            }\n        });\n\n        colorDialog.setParentComponent(this);\n        colorDialog.setBodyComponent(colorPanel);\n        colorPanel.setValue(this.getValue());\n\n        colorDialog.addDestroyFunc(() => {\n            // here we check if the picker was already being\n            // destroyed to avoid a stack overflow\n            if (!this.isDestroyingPicker) {\n                this.isDestroyingPicker = true;\n\n                if (colorPanel.isAlive()) {\n                    this.destroyBean(colorPanel);\n                }\n            } else {\n                this.isDestroyingPicker = false;\n            }\n\n            if (this.isAlive()) {\n                setAriaExpanded(this.eWrapper, false);\n                this.getFocusableElement().focus();\n            }\n\n            this.isPickerDisplayed = false;\n        });\n\n        return colorDialog;\n    }\n\n    public setValue(color: string): this {\n        if (this.value === color) { return this; }\n\n        this.eDisplayField.style.backgroundColor = color;\n\n        return super.setValue(color);\n    }\n\n    public getValue(): string {\n        return this.value;\n    }\n}\n"]}