{"version":3,"sources":["../../../src/ts/widgets/agAbstractField.ts"],"names":[],"mappings":";;;;;;;;AAAA,uDAA8D;AAC9D,sCAA0D;AAG1D,MAAsB,eAA6D,SAAQ,iCAAwB;IAO/G,YAAY,MAAgB,EAAE,QAAiB,EAAqB,SAAkB;QAClF,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QADwC,cAAS,GAAT,SAAS,CAAS;QAF5E,aAAQ,GAAY,KAAK,CAAC;IAIpC,CAAC;IAES,aAAa;QACnB,KAAK,CAAC,aAAa,EAAE,CAAC;QAEtB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;IACL,CAAC;IAEM,aAAa,CAAC,UAA8C;QAC/D,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,eAAe,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEhG,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC;IACrC,CAAC;IAEM,QAAQ,CAAC,KAAa;QACzB,mBAAa,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,gBAAgB;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,QAAQ,CAAC,KAAqB,EAAE,MAAgB;QACnD,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACtB,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,MAAM,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,eAAe,CAAC,aAAa,EAAE,CAAC,CAAC;SAC/D;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,WAAW,CAAC,QAAiB;QAChC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAEtB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAE9B,iBAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC/B,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAElD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,UAAU;QACb,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC3B,CAAC;;AAzEL,0CA0EC;AAzEiB,6BAAa,GAAG,aAAa,CAAC","file":"agAbstractField.js","sourcesContent":["import { AgAbstractLabel, IAgLabel } from './agAbstractLabel';\nimport { setDisabled, setFixedWidth } from '../utils/dom';\n\nexport type FieldElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\nexport abstract class AgAbstractField<TValue, TConfig extends IAgLabel = IAgLabel> extends AgAbstractLabel<TConfig> {\n    public static EVENT_CHANGED = 'valueChange';\n\n    protected previousValue: TValue | null | undefined;\n    protected value: TValue | null | undefined;\n    protected disabled: boolean = false;\n\n    constructor(config?: TConfig, template?: string, protected readonly className?: string) {\n        super(config, template);\n    }\n\n    protected postConstruct(): void {\n        super.postConstruct();\n\n        if (this.className) {\n            this.addCssClass(this.className);\n        }\n    }\n\n    public onValueChange(callbackFn: (newValue?: TValue | null) => void) {\n        this.addManagedListener(this, AgAbstractField.EVENT_CHANGED, () => callbackFn(this.getValue()));\n\n        return this;\n    }\n\n    public getWidth(): number {\n        return this.getGui().clientWidth;\n    }\n\n    public setWidth(width: number): this {\n        setFixedWidth(this.getGui(), width);\n\n        return this;\n    }\n\n    public getPreviousValue(): TValue | null | undefined {\n        return this.previousValue;\n    }\n\n    public getValue(): TValue | null | undefined {\n        return this.value;\n    }\n\n    public setValue(value?: TValue | null, silent?: boolean): this {\n        if (this.value === value) {\n            return this;\n        }\n\n        this.previousValue = this.value;\n        this.value = value;\n\n        if (!silent) {\n            this.dispatchEvent({ type: AgAbstractField.EVENT_CHANGED });\n        }\n\n        return this;\n    }\n\n    public setDisabled(disabled: boolean): this {\n        disabled = !!disabled;\n\n        const element = this.getGui();\n\n        setDisabled(element, disabled);\n        element.classList.toggle('ag-disabled', disabled);\n\n        this.disabled = disabled;\n\n        return this;\n    }\n\n    public isDisabled(): boolean {\n        return !!this.disabled;\n    }\n}\n"]}