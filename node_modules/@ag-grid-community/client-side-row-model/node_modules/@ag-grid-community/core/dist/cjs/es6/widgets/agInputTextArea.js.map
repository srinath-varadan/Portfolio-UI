{"version":3,"sources":["../../../src/ts/widgets/agInputTextArea.ts"],"names":[],"mappings":";;;;;;;;AAAA,iEAA2E;AAE3E,MAAa,eAAgB,SAAQ,2CAAiD;IAClF,YAAY,MAAoB;QAC5B,KAAK,CAAC,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;IACpD,CAAC;IAEM,QAAQ,CAAC,KAAa,EAAE,MAAgB;QAC3C,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAE1C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAE1B,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,OAAO,CAAC,IAAY;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QAExB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,OAAO,CAAC,IAAY;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QAExB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAxBD,0CAwBC","file":"agInputTextArea.js","sourcesContent":["import { AgAbstractInputField, IInputField } from \"./agAbstractInputField\";\n\nexport class AgInputTextArea extends AgAbstractInputField<HTMLTextAreaElement, string> {\n    constructor(config?: IInputField) {\n        super(config, 'ag-text-area', null, 'textarea');\n    }\n\n    public setValue(value: string, silent?: boolean): this {\n        const ret = super.setValue(value, silent);\n\n        this.eInput.value = value;\n\n        return ret;\n    }\n\n    public setCols(cols: number): this {\n        this.eInput.cols = cols;\n\n        return this;\n    }\n\n    public setRows(rows: number): this {\n        this.eInput.rows = rows;\n\n        return this;\n    }\n}"]}