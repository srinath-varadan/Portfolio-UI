{"version":3,"sources":["../../../src/ts/widgets/agColorPanel.ts"],"names":[],"mappings":"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","file":"agColorPanel.js","sourcesContent":["import { Component } from \"./component\";\nimport { Color } from \"../utils\";\nimport { RefSelector } from \"./componentAnnotations\";\nimport { PostConstruct } from \"../context/context\";\nimport { AgColorPicker } from \"./agColorPicker\";\nimport { exists } from \"../utils/generic\";\n\nexport class AgColorPanel extends Component {\n    private H = 1; // in the [0, 1] range\n    private S = 1; // in the [0, 1] range\n    private B = 1; // in the [0, 1] range\n    private A = 1; // in the [0, 1] range\n\n    private spectrumValRect?: ClientRect | DOMRect;\n    private isSpectrumDragging = false;\n\n    private spectrumHueRect?: ClientRect | DOMRect;\n    private isSpectrumHueDragging = false;\n\n    private spectrumAlphaRect?: ClientRect | DOMRect;\n    private isSpectrumAlphaDragging = false;\n\n    private picker: Component;\n\n    private colorChanged = false;\n    private static maxRecentColors = 8;\n    private static recentColors: string[] = [];\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-color-panel\">\n            <div ref=\"spectrumColor\" class=\"ag-spectrum-color\">\n                <div class=\"ag-spectrum-sat ag-spectrum-fill\">\n                    <div ref=\"spectrumVal\" class=\"ag-spectrum-val ag-spectrum-fill\">\n                        <div ref=\"spectrumDragger\" class=\"ag-spectrum-dragger\"></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ag-spectrum-tools\">\n                <div ref=\"spectrumHue\" class=\"ag-spectrum-hue ag-spectrum-tool\">\n                    <div class=\"ag-spectrum-hue-background\"></div>\n                    <div ref=\"spectrumHueSlider\" class=\"ag-spectrum-slider\"></div>\n                </div>\n                <div ref=\"spectrumAlpha\" class=\"ag-spectrum-alpha ag-spectrum-tool\">\n                    <div class=\"ag-spectrum-alpha-background\"></div>\n                    <div ref=\"spectrumAlphaSlider\" class=\"ag-spectrum-slider\"></div>\n                </div>\n                <div ref=\"recentColors\" class=\"ag-recent-colors\"></div>\n            </div>\n        </div>`;\n\n    @RefSelector('spectrumColor') private readonly spectrumColor: HTMLElement;\n    @RefSelector('spectrumVal') private readonly spectrumVal: HTMLElement;\n    @RefSelector('spectrumDragger') private readonly spectrumDragger: HTMLElement;\n    @RefSelector('spectrumHue') private readonly spectrumHue: HTMLElement;\n    @RefSelector('spectrumHueSlider') private readonly spectrumHueSlider: HTMLElement;\n    @RefSelector('spectrumAlpha') private readonly spectrumAlpha: HTMLElement;\n    @RefSelector('spectrumAlphaSlider') private readonly spectrumAlphaSlider: HTMLElement;\n    @RefSelector('recentColors') private readonly recentColors: HTMLElement;\n\n    constructor(config: { picker: Component }) {\n        super(AgColorPanel.TEMPLATE);\n        this.picker = config.picker;\n    }\n\n    @PostConstruct\n    private postConstruct() {\n        const eGui = this.getGui();\n\n        this.initRecentColors();\n\n        this.addManagedListener(this.spectrumVal, 'mousedown', this.onSpectrumDraggerDown.bind(this));\n        this.addManagedListener(eGui, 'mousemove', this.onSpectrumDraggerMove.bind(this));\n\n        this.addManagedListener(this.spectrumHue, 'mousedown', this.onSpectrumHueDown.bind(this));\n        this.addManagedListener(eGui, 'mousemove', this.onSpectrumHueMove.bind(this));\n\n        this.addManagedListener(this.spectrumAlpha, 'mousedown', this.onSpectrumAlphaDown.bind(this));\n        this.addManagedListener(eGui, 'mousemove', this.onSpectrumAlphaMove.bind(this));\n\n        // Listening to `mouseup` on the document on purpose. The user might release the mouse button\n        // outside the UI control. When the mouse returns back to the control's area, the dragging\n        // of the thumb is not expected and seen as a bug.\n        this.addManagedListener(document, 'mouseup', this.onMouseUp.bind(this));\n\n        this.addManagedListener(this.recentColors, 'click', this.onRecentColorClick.bind(this));\n    }\n\n    private refreshSpectrumRect() {\n        return this.spectrumValRect = this.spectrumVal.getBoundingClientRect();\n    }\n\n    private refreshHueRect() {\n        return this.spectrumHueRect = this.spectrumHue.getBoundingClientRect();\n    }\n\n    private refreshAlphaRect() {\n        return this.spectrumAlphaRect = this.spectrumAlpha.getBoundingClientRect();\n    }\n\n    private onSpectrumDraggerDown(e: MouseEvent) {\n        this.refreshSpectrumRect();\n        this.isSpectrumDragging = true;\n\n        this.moveDragger(e);\n    }\n\n    private onSpectrumDraggerMove(e: MouseEvent) {\n        if (this.isSpectrumDragging) {\n            this.moveDragger(e);\n        }\n    }\n\n    private onSpectrumHueDown(e: MouseEvent) {\n        this.refreshHueRect();\n        this.isSpectrumHueDragging = true;\n\n        this.moveHueSlider(e);\n    }\n\n    private onSpectrumHueMove(e: MouseEvent) {\n        if (this.isSpectrumHueDragging) {\n            this.moveHueSlider(e);\n        }\n    }\n\n    private onSpectrumAlphaDown(e: MouseEvent) {\n        this.refreshAlphaRect();\n        this.isSpectrumAlphaDragging = true;\n\n        this.moveAlphaSlider(e);\n    }\n\n    private onSpectrumAlphaMove(e: MouseEvent) {\n        if (this.isSpectrumAlphaDragging) {\n            this.moveAlphaSlider(e);\n        }\n    }\n\n    private onMouseUp() {\n        this.isSpectrumDragging = false;\n        this.isSpectrumHueDragging = false;\n        this.isSpectrumAlphaDragging = false;\n    }\n\n    private moveDragger(e: MouseEvent) {\n        const valRect = this.spectrumValRect;\n\n        if (valRect) {\n            let x = e.clientX - valRect.left;\n            let y = e.clientY - valRect.top;\n\n            x = Math.max(x, 0);\n            x = Math.min(x, valRect.width);\n            y = Math.max(y, 0);\n            y = Math.min(y, valRect.height);\n\n            this.setSpectrumValue(x / valRect.width, 1 - y / valRect.height);\n        }\n    }\n\n    private moveHueSlider(e: MouseEvent) {\n        const hueRect = this.spectrumHueRect;\n\n        if (hueRect) {\n            const slider = this.spectrumHueSlider;\n            const sliderRect = slider.getBoundingClientRect();\n\n            let x = e.clientX - hueRect.left;\n\n            x = Math.max(x, 0);\n            x = Math.min(x, hueRect.width);\n\n            this.H = 1 - x / hueRect.width;\n\n            slider.style.left = (x + sliderRect.width / 2) + 'px';\n\n            this.update();\n        }\n    }\n\n    private moveAlphaSlider(e: MouseEvent) {\n        const alphaRect = this.spectrumAlphaRect;\n\n        if (alphaRect) {\n            const slider = this.spectrumAlphaSlider;\n            const sliderRect = slider.getBoundingClientRect();\n\n            let x = e.clientX - alphaRect.left;\n\n            x = Math.max(x, 0);\n            x = Math.min(x, alphaRect.width);\n\n            this.A = x / alphaRect.width;\n\n            slider.style.left = (x + sliderRect.width / 2) + 'px';\n\n            this.update();\n        }\n    }\n\n    private update() {\n        const color = Color.fromHSB(this.H * 360, this.S, this.B, this.A);\n        const spectrumColor = Color.fromHSB(this.H * 360, 1, 1);\n        const rgbaColor = color.toRgbaString();\n\n        // the recent color list needs to know color has actually changed\n        const colorPicker = this.picker as AgColorPicker;\n\n        const existingColor = Color.fromString(colorPicker.getValue());\n        if (existingColor.toRgbaString() !== rgbaColor) {\n            this.colorChanged = true;\n        }\n\n        colorPicker.setValue(rgbaColor);\n\n        this.spectrumColor.style.backgroundColor = spectrumColor.toRgbaString();\n        this.spectrumDragger.style.backgroundColor = rgbaColor;\n    }\n\n    /**\n     * @param saturation In the [0, 1] interval.\n     * @param brightness In the [0, 1] interval.\n     */\n    public setSpectrumValue(saturation: number, brightness: number) {\n        const valRect = this.spectrumValRect || this.refreshSpectrumRect();\n\n        if (valRect) {\n            const dragger = this.spectrumDragger;\n            const draggerRect = dragger.getBoundingClientRect();\n\n            saturation = Math.max(0, saturation);\n            saturation = Math.min(1, saturation);\n            brightness = Math.max(0, brightness);\n            brightness = Math.min(1, brightness);\n\n            this.S = saturation;\n            this.B = brightness;\n\n            dragger.style.left = (saturation * valRect.width - draggerRect.width / 2) + 'px';\n            dragger.style.top = ((1 - brightness) * valRect.height - draggerRect.height / 2) + 'px';\n\n            this.update();\n        }\n    }\n\n    private initRecentColors() {\n        const recentColors = AgColorPanel.recentColors;\n        const innerHtml = recentColors.map((color: string, index: number) => {\n            return `<div class=\"ag-recent-color\" id=${index} style=\"background-color: ${color}; width: 15px; height: 15px;\" recent-color=\"${color}\"></div>`;\n        });\n\n        this.recentColors.innerHTML = innerHtml.join('');\n    }\n\n    public setValue(val: string) {\n        const color: Color = Color.fromString(val);\n        const [h, s, b] = color.toHSB();\n\n        this.H = (isNaN(h) ? 0 : h) / 360;\n        this.A = color.a;\n\n        const spectrumHueRect = this.spectrumHueRect || this.refreshHueRect();\n        const spectrumAlphaRect = this.spectrumAlphaRect || this.refreshAlphaRect();\n\n        this.spectrumHueSlider.style.left = `${((this.H - 1) * -spectrumHueRect.width)}px`;\n        this.spectrumAlphaSlider.style.left = `${(this.A * spectrumAlphaRect.width)}px`;\n\n        this.setSpectrumValue(s, b);\n    }\n\n    private onRecentColorClick(e: MouseEvent) {\n        const target = e.target as HTMLElement;\n\n        if (!exists(target.id)) {\n            return;\n        }\n\n        const id = parseInt(target.id, 10);\n\n        this.setValue(AgColorPanel.recentColors[id]);\n        this.destroy();\n    }\n\n    private addRecentColor() {\n        const color = Color.fromHSB(this.H * 360, this.S, this.B, this.A);\n        const rgbaColor = color.toRgbaString();\n\n        let recentColors = AgColorPanel.recentColors;\n\n        if (!this.colorChanged || recentColors[0] === rgbaColor) {\n            return;\n        }\n\n        // remove duplicate color\n        recentColors = recentColors.filter(currentColor => currentColor != rgbaColor);\n\n        // add color to head\n        recentColors = [rgbaColor].concat(recentColors);\n\n        // ensure we don't exceed max number of recent colors\n        if (recentColors.length > AgColorPanel.maxRecentColors) {\n            recentColors = recentColors.slice(0, AgColorPanel.maxRecentColors);\n        }\n\n        AgColorPanel.recentColors = recentColors;\n    }\n\n    protected destroy(): void {\n        this.addRecentColor();\n        super.destroy();\n    }\n}\n"]}