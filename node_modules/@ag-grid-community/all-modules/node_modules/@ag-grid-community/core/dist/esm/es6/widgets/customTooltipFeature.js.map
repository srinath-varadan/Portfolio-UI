{"version":3,"sources":["../../../src/ts/widgets/customTooltipFeature.ts"],"names":[],"mappings":"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","file":"customTooltipFeature.js","sourcesContent":["import { Autowired, PostConstruct } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { ColumnApi } from \"../columns/columnApi\";\nimport { GridApi } from \"../gridApi\";\nimport { ITooltipComp, ITooltipParams } from \"../rendering/tooltipComponent\";\nimport { PopupService } from \"./popupService\";\nimport { UserComponentFactory } from \"../components/framework/userComponentFactory\";\nimport { exists } from \"../utils/generic\";\nimport { isIOSUserAgent } from \"../utils/browser\";\nimport { WithoutGridCommon } from \"../interfaces/iCommon\";\n\nexport interface TooltipParentComp {\n    getTooltipParams(): WithoutGridCommon<ITooltipParams>;\n    getGui(): HTMLElement;\n}\n\nenum TooltipStates { NOTHING, WAITING_TO_SHOW, SHOWING }\n\nexport class CustomTooltipFeature extends BeanStub {\n\n    private readonly DEFAULT_SHOW_TOOLTIP_DELAY = 2000;\n    private readonly DEFAULT_HIDE_TOOLTIP_DELAY = 10000;\n    private readonly SHOW_QUICK_TOOLTIP_DIFF = 1000;\n    private readonly FADE_OUT_TOOLTIP_TIMEOUT = 1000;\n\n    // different instances of tooltipFeature use this to see when the\n    // last tooltip was hidden.\n    private static lastTooltipHideTime: number;\n\n    @Autowired('popupService') private popupService: PopupService;\n    @Autowired('userComponentFactory') private userComponentFactory: UserComponentFactory;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n\n    private tooltipShowDelay: number;\n    private tooltipHideDelay: number;\n\n    private parentComp: TooltipParentComp;\n\n    private showTooltipTimeoutId: number | undefined;\n    private hideTooltipTimeoutId: number | undefined;\n\n    private state = TooltipStates.NOTHING;\n\n    private lastMouseEvent: MouseEvent;\n\n    private tooltipComp: ITooltipComp | undefined;\n    private tooltipPopupDestroyFunc: (() => void) | undefined;\n    // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\n    // async we could request two tooltips before the first instance returns, in which case we should\n    // disregard the second instance.\n    private tooltipInstanceCount = 0;\n\n    private tooltipMouseTrack: boolean = false;\n\n    constructor(parentComp: TooltipParentComp) {\n        super();\n        this.parentComp = parentComp;\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.tooltipShowDelay = this.gridOptionsWrapper.getTooltipDelay('show') || this.DEFAULT_SHOW_TOOLTIP_DELAY;\n        this.tooltipHideDelay = this.gridOptionsWrapper.getTooltipDelay('hide') || this.DEFAULT_HIDE_TOOLTIP_DELAY;\n        this.tooltipMouseTrack = this.gridOptionsWrapper.isTooltipMouseTrack();\n\n        const el = this.parentComp.getGui();\n\n        this.addManagedListener(el, 'mouseenter', this.onMouseEnter.bind(this));\n        this.addManagedListener(el, 'mouseleave', this.onMouseLeave.bind(this));\n        this.addManagedListener(el, 'mousemove', this.onMouseMove.bind(this));\n        this.addManagedListener(el, 'mousedown', this.onMouseDown.bind(this));\n        this.addManagedListener(el, 'keydown', this.onKeyDown.bind(this));\n    }\n\n    protected destroy(): void {\n        // if this component gets destroyed while tooltip is showing, need to make sure\n        // we don't end with no mouseLeave event resulting in zombie tooltip\n        this.setToDoNothing();\n        super.destroy();\n    }\n\n    public onMouseEnter(e: MouseEvent): void {\n        if (isIOSUserAgent()) { return; }\n        // every mouseenter should be following by a mouseleave, however for some unkonwn, it's possible for\n        // mouseenter to be called twice in a row, which can happen if editing the cell. this was reported\n        // in https://ag-grid.atlassian.net/browse/AG-4422. to get around this, we check the state, and if\n        // state is !=nothing, then we know mouseenter was already received.\n        if (this.state != TooltipStates.NOTHING) { return; }\n\n        // if another tooltip was hidden very recently, we only wait 200ms to show, not the normal waiting time\n        const delay = this.isLastTooltipHiddenRecently() ? 200 : this.tooltipShowDelay;\n\n        this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\n        this.lastMouseEvent = e;\n        this.state = TooltipStates.WAITING_TO_SHOW;\n    }\n\n    public onMouseLeave(): void {\n        this.setToDoNothing();\n    }\n\n    private onKeyDown(): void {\n        this.setToDoNothing();\n    }\n\n    private setToDoNothing(): void {\n        if (this.state === TooltipStates.SHOWING) {\n            this.hideTooltip();\n        }\n\n        this.clearTimeouts();\n\n        this.state = TooltipStates.NOTHING;\n    }\n\n    public onMouseMove(e: MouseEvent): void {\n        // there is a delay from the time we mouseOver a component and the time the\n        // tooltip is displayed, so we need to track mousemove to be able to correctly\n        // position the tooltip when showTooltip is called.\n        this.lastMouseEvent = e;\n\n        if (\n            this.tooltipMouseTrack &&\n            this.state === TooltipStates.SHOWING &&\n            this.tooltipComp\n        ) {\n            this.positionTooltipUnderLastMouseEvent();\n        }\n    }\n\n    public onMouseDown(): void {\n        this.setToDoNothing();\n    }\n\n    private hideTooltip(): void {\n        // check if comp exists - due to async, although we asked for\n        // one, the instance may not be back yet\n        if (this.tooltipComp) {\n            this.destroyTooltipComp();\n            CustomTooltipFeature.lastTooltipHideTime = new Date().getTime();\n        }\n\n        this.state = TooltipStates.NOTHING;\n    }\n\n    private destroyTooltipComp(): void {\n        // add class to fade out the tooltip\n        this.tooltipComp!.getGui().classList.add('ag-tooltip-hiding');\n\n        // make local copies of these variables, as we use them in the async function below,\n        // and we clear then to 'undefined' later, so need to take a copy before they are undefined.\n        const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\n        const tooltipComp = this.tooltipComp;\n\n        window.setTimeout(() => {\n            tooltipPopupDestroyFunc!();\n            this.getContext().destroyBean(tooltipComp);\n        }, this.FADE_OUT_TOOLTIP_TIMEOUT);\n\n        this.tooltipPopupDestroyFunc = undefined;\n        this.tooltipComp = undefined;\n    }\n\n    private isLastTooltipHiddenRecently(): boolean {\n        // return true if <1000ms since last time we hid a tooltip\n        const now = new Date().getTime();\n        const then = CustomTooltipFeature.lastTooltipHideTime;\n\n        return (now - then) < this.SHOW_QUICK_TOOLTIP_DIFF;\n    }\n\n    private showTooltip(): void {\n        const params: WithoutGridCommon<ITooltipParams> = {\n            ...this.parentComp.getTooltipParams()\n        };\n\n        if (!exists(params.value)) {\n            this.setToDoNothing();\n            return;\n        }\n\n        this.state = TooltipStates.SHOWING;\n        this.tooltipInstanceCount++;\n\n        // we pass in tooltipInstanceCount so the callback knows what the count was when\n        // we requested the tooltip, so if another tooltip was requested in the mean time\n        // we disregard it\n        const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\n\n        const userDetails = this.userComponentFactory.getTooltipCompDetails(params);\n        userDetails.newAgStackInstance()!.then(callback);\n    }\n\n    private newTooltipComponentCallback(tooltipInstanceCopy: number, tooltipComp: ITooltipComp): void {\n        const compNoLongerNeeded = this.state !== TooltipStates.SHOWING || this.tooltipInstanceCount !== tooltipInstanceCopy;\n\n        if (compNoLongerNeeded) {\n            this.getContext().destroyBean(tooltipComp);\n            return;\n        }\n\n        const eGui = tooltipComp.getGui();\n\n        this.tooltipComp = tooltipComp;\n\n        if (!eGui.classList.contains('ag-tooltip')) {\n            eGui.classList.add('ag-tooltip-custom');\n        }\n\n        const translate = this.gridOptionsWrapper.getLocaleTextFunc();\n\n        const addPopupRes = this.popupService.addPopup({\n            eChild: eGui,\n            ariaLabel: translate('ariaLabelTooltip', 'Tooltip')\n        });\n        if (addPopupRes) {\n            this.tooltipPopupDestroyFunc = addPopupRes.hideFunc;\n        }\n        // this.tooltipPopupDestroyFunc = this.popupService.addPopup(false, eGui, false);\n\n        this.positionTooltipUnderLastMouseEvent();\n        this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.tooltipHideDelay);\n    }\n\n    private positionTooltipUnderLastMouseEvent(): void {\n        this.popupService.positionPopupUnderMouseEvent({\n            type: 'tooltip',\n            mouseEvent: this.lastMouseEvent,\n            ePopup: this.tooltipComp!.getGui(),\n            nudgeY: 18\n        });\n    }\n\n    private clearTimeouts(): void {\n        if (this.showTooltipTimeoutId) {\n            window.clearTimeout(this.showTooltipTimeoutId);\n            this.showTooltipTimeoutId = undefined;\n        }\n\n        if (this.hideTooltipTimeoutId) {\n            window.clearTimeout(this.hideTooltipTimeoutId);\n            this.hideTooltipTimeoutId = undefined;\n        }\n    }\n}\n"]}