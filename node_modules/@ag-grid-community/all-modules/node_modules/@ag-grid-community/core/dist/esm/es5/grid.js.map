{"version":3,"sources":["../../../src/ts/grid.ts"],"names":[],"mappings":"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","file":"grid.js","sourcesContent":["import { GridOptions } from \"./entities/gridOptions\";\nimport { GridOptionsWrapper } from \"./gridOptionsWrapper\";\nimport { SelectionService } from \"./selectionService\";\nimport { ColumnApi } from \"./columns/columnApi\";\nimport { ColumnModel } from \"./columns/columnModel\";\nimport { RowRenderer } from \"./rendering/rowRenderer\";\nimport { GridHeaderComp } from \"./headerRendering/gridHeaderComp\";\nimport { FilterManager } from \"./filter/filterManager\";\nimport { ValueService } from \"./valueService/valueService\";\nimport { EventService } from \"./eventService\";\nimport { GridBodyComp } from \"./gridBodyComp/gridBodyComp\";\nimport { GridApi } from \"./gridApi\";\nimport { ColumnFactory } from \"./columns/columnFactory\";\nimport { DisplayedGroupCreator } from \"./columns/displayedGroupCreator\";\nimport { ExpressionService } from \"./valueService/expressionService\";\nimport { TemplateService } from \"./templateService\";\nimport { PopupService } from \"./widgets/popupService\";\nimport { Logger, LoggerFactory } from \"./logger\";\nimport { ColumnUtils } from \"./columns/columnUtils\";\nimport { AutoWidthCalculator } from \"./rendering/autoWidthCalculator\";\nimport { HorizontalResizeService } from \"./headerRendering/common/horizontalResizeService\";\nimport { ComponentMeta, Context, ContextParams } from \"./context/context\";\nimport { GridComp } from \"./gridComp/gridComp\";\nimport { DragAndDropService } from \"./dragAndDrop/dragAndDropService\";\nimport { DragService } from \"./dragAndDrop/dragService\";\nimport { SortController } from \"./sortController\";\nimport { FocusService } from \"./focusService\";\nimport { MouseEventService } from \"./gridBodyComp/mouseEventService\";\nimport { CellNavigationService } from \"./cellNavigationService\";\nimport { Events, GridReadyEvent } from \"./events\";\nimport { ValueFormatterService } from \"./rendering/valueFormatterService\";\nimport { AgCheckbox } from \"./widgets/agCheckbox\";\nimport { AgRadioButton } from \"./widgets/agRadioButton\";\nimport { VanillaFrameworkOverrides } from \"./vanillaFrameworkOverrides\";\nimport { IFrameworkOverrides } from \"./interfaces/iFrameworkOverrides\";\nimport { ScrollVisibleService } from \"./gridBodyComp/scrollVisibleService\";\nimport { StylingService } from \"./styling/stylingService\";\nimport { ColumnHoverService } from \"./rendering/columnHoverService\";\nimport { ColumnAnimationService } from \"./rendering/columnAnimationService\";\nimport { AutoGroupColService } from \"./columns/autoGroupColService\";\nimport { PaginationProxy } from \"./pagination/paginationProxy\";\nimport { PaginationAutoPageSizeService } from \"./pagination/paginationAutoPageSizeService\";\nimport { IRowModel } from \"./interfaces/iRowModel\";\nimport { Constants } from \"./constants/constants\";\nimport { ValueCache } from \"./valueService/valueCache\";\nimport { ChangeDetectionService } from \"./valueService/changeDetectionService\";\nimport { AlignedGridsService } from \"./alignedGridsService\";\nimport { UserComponentFactory } from \"./components/framework/userComponentFactory\";\nimport { UserComponentRegistry } from \"./components/framework/userComponentRegistry\";\nimport { AgComponentUtils } from \"./components/framework/agComponentUtils\";\nimport { ComponentMetadataProvider } from \"./components/framework/componentMetadataProvider\";\nimport { Beans } from \"./rendering/beans\";\nimport { Environment } from \"./environment\";\nimport { AnimationFrameService } from \"./misc/animationFrameService\";\nimport { NavigationService } from \"./gridBodyComp/navigationService\";\nimport { RowContainerHeightService } from \"./rendering/rowContainerHeightService\";\nimport { SelectableService } from \"./rowNodes/selectableService\";\nimport { PaginationComp } from \"./pagination/paginationComp\";\nimport { ResizeObserverService } from \"./misc/resizeObserverService\";\nimport { OverlayWrapperComponent } from \"./rendering/overlays/overlayWrapperComponent\";\nimport { Module } from \"./interfaces/iModule\";\nimport { AgGroupComponent } from \"./widgets/agGroupComponent\";\nimport { AgDialog } from \"./widgets/agDialog\";\nimport { AgPanel } from \"./widgets/agPanel\";\nimport { AgInputTextField } from \"./widgets/agInputTextField\";\nimport { AgInputTextArea } from \"./widgets/agInputTextArea\";\nimport { AgSlider } from \"./widgets/agSlider\";\nimport { AgColorPicker } from \"./widgets/agColorPicker\";\nimport { AgInputNumberField } from \"./widgets/agInputNumberField\";\nimport { AgInputRange } from \"./widgets/agInputRange\";\nimport { AgSelect } from \"./widgets/agSelect\";\nimport { AgAngleSelect } from \"./widgets/agAngleSelect\";\nimport { AgToggleButton } from \"./widgets/agToggleButton\";\nimport { RowPositionUtils } from \"./entities/rowPosition\";\nimport { CellPositionUtils } from \"./entities/cellPosition\";\nimport { PinnedRowModel } from \"./pinnedRowModel/pinnedRowModel\";\nimport { ModuleRegistry } from \"./modules/moduleRegistry\";\nimport { ModuleNames } from \"./modules/moduleNames\";\nimport { UndoRedoService } from \"./undoRedo/undoRedoService\";\nimport { AgStackComponentsRegistry } from \"./components/agStackComponentsRegistry\";\nimport { HeaderPositionUtils } from \"./headerRendering/common/headerPosition\";\nimport { HeaderNavigationService } from \"./headerRendering/common/headerNavigationService\";\nimport { exists, missing } from \"./utils/generic\";\nimport { iterateObject } from \"./utils/object\";\nimport { ColumnDefFactory } from \"./columns/columnDefFactory\";\nimport { RowCssClassCalculator } from \"./rendering/row/rowCssClassCalculator\";\nimport { RowNodeBlockLoader } from \"./rowNodeCache/rowNodeBlockLoader\";\nimport { RowNodeSorter } from \"./rowNodes/rowNodeSorter\";\nimport { CtrlsService } from \"./ctrlsService\";\nimport { CtrlsFactory } from \"./ctrlsFactory\";\nimport { FakeHScrollComp } from \"./gridBodyComp/fakeHScrollComp\";\nimport { PinnedWidthService } from \"./gridBodyComp/pinnedWidthService\";\nimport { RowContainerComp } from \"./gridBodyComp/rowContainer/rowContainerComp\";\nimport { RowNodeEventThrottle } from \"./entities/rowNodeEventThrottle\";\nimport { StandardMenuFactory } from \"./headerRendering/cells/column/standardMenu\";\n\nexport interface GridParams {\n    // used by Web Components\n    globalEventListener?: Function;\n\n\n    // this allows the base frameworks (React, Angular, etc) to provide alternative cellRenderers and cellEditors\n    frameworkOverrides?: IFrameworkOverrides;\n\n    // bean instances to add to the context\n    providedBeanInstances?: { [key: string]: any; };\n\n    modules?: Module[];\n}\n\n// creates JavaScript vanilla Grid, including JavaScript (ag-stack) components, which can\n// be wrapped by the framework wrappers\nexport class Grid {\n\n    protected logger: Logger;\n\n    private readonly gridOptions: GridOptions;\n\n    constructor(eGridDiv: HTMLElement, gridOptions: GridOptions, params?: GridParams) {\n\n        if (!gridOptions) {\n            console.error('AG Grid: no gridOptions provided to the grid');\n            return;\n        }\n\n        this.gridOptions = gridOptions;\n\n        new GridCoreCreator().create(eGridDiv, gridOptions, context => {\n            const gridComp = new GridComp(eGridDiv);\n            context.createBean(gridComp);\n        }, undefined, params);\n    }\n\n    public destroy(): void {\n        if (this.gridOptions && this.gridOptions.api) {\n            this.gridOptions.api.destroy();\n        }\n    }\n}\n\n// created services of grid only, no UI, so frameworks can use this if providing\n// their own UI\nexport class GridCoreCreator {\n\n    public create(eGridDiv: HTMLElement, gridOptions: GridOptions, createUi: (context: Context) => void, acceptChanges?: (context: Context)=>void, params?: GridParams): void {\n\n        const debug = !!gridOptions.debug;\n\n        const registeredModules = this.getRegisteredModules(params);\n\n        const beanClasses = this.createBeansList(gridOptions.rowModelType, registeredModules);\n        const providedBeanInstances = this.createProvidedBeans(eGridDiv, gridOptions, params);\n\n        if (!beanClasses) { return; } // happens when no row model found\n\n        const contextParams: ContextParams = {\n            providedBeanInstances: providedBeanInstances,\n            beanClasses: beanClasses,\n            debug: debug\n        };\n\n        const logger = new Logger('AG Grid', () => gridOptions.debug);\n        const contextLogger = new Logger('Context', () => contextParams.debug);\n        const context = new Context(contextParams, contextLogger);\n        const beans = context.getBean('beans') as Beans;\n\n        this.registerModuleUserComponents(beans, registeredModules);\n        this.registerStackComponents(beans, registeredModules);\n        this.registerControllers(beans, registeredModules);\n\n        createUi(context);\n\n        // we wait until the UI has finished initialising before setting in columns and rows\n        beans.ctrlsService.whenReady(() => {\n            this.setColumnsAndData(beans);\n            this.dispatchGridReadyEvent(beans, gridOptions);\n            const isEnterprise = ModuleRegistry.isRegistered(ModuleNames.EnterpriseCoreModule);\n            logger.log(`initialised successfully, enterprise = ${isEnterprise}`);\n        });\n\n        if (acceptChanges) { acceptChanges(context); }\n    }\n\n    private registerControllers(beans: Beans, registeredModules: Module[]): void {\n        registeredModules.forEach(module => {\n            if (module.controllers) {\n                module.controllers.forEach(meta => beans.ctrlsFactory.register(meta));\n            }\n        });\n    }\n\n    private registerStackComponents(beans: Beans, registeredModules: Module[]): void {\n        const agStackComponents = this.createAgStackComponentsList(registeredModules);\n        beans.agStackComponentsRegistry.setupComponents(agStackComponents);\n    }\n\n    private getRegisteredModules(params?: GridParams): Module[] {\n        const passedViaConstructor: Module[] | undefined | null = params ? params.modules : null;\n        const registered = ModuleRegistry.getRegisteredModules();\n\n        const allModules: Module[] = [];\n        const mapNames: { [name: string]: boolean; } = {};\n\n        // adds to list and removes duplicates\n        function addModule(moduleBased: boolean, mod: Module) {\n            function addIndividualModule(currentModule: Module) {\n                if (!mapNames[currentModule.moduleName]) {\n                    mapNames[currentModule.moduleName] = true;\n                    allModules.push(currentModule);\n                    ModuleRegistry.register(currentModule, moduleBased);\n                }\n            }\n\n            addIndividualModule(mod);\n            if (mod.dependantModules) {\n                mod.dependantModules.forEach(addModule.bind(null, moduleBased));\n            }\n        }\n\n        if (passedViaConstructor) {\n            passedViaConstructor.forEach(addModule.bind(null, true));\n        }\n\n        if (registered) {\n            registered.forEach(addModule.bind(null, !ModuleRegistry.isPackageBased()));\n        }\n\n        return allModules;\n    }\n\n    private registerModuleUserComponents(beans: Beans, registeredModules: Module[]): void {\n        const moduleUserComps: { componentName: string, componentClass: any; }[]\n            = this.extractModuleEntity(registeredModules,\n                (module) => module.userComponents ? module.userComponents : []);\n\n        moduleUserComps.forEach(compMeta => {\n            beans.userComponentRegistry.registerDefaultComponent(compMeta.componentName, compMeta.componentClass);\n        });\n    }\n\n    private createProvidedBeans(eGridDiv: HTMLElement, gridOptions: GridOptions, params?: GridParams): any {\n        let frameworkOverrides = params ? params.frameworkOverrides : null;\n        if (missing(frameworkOverrides)) {\n            frameworkOverrides = new VanillaFrameworkOverrides();\n        }\n\n        const seed = {\n            gridOptions: gridOptions,\n            eGridDiv: eGridDiv,\n            globalEventListener: params ? params.globalEventListener : null,\n            frameworkOverrides: frameworkOverrides\n        };\n        if (params && params.providedBeanInstances) {\n            Object.assign(seed, params.providedBeanInstances);\n        }\n\n        return seed;\n    }\n\n    private createAgStackComponentsList(registeredModules: Module[]): any[] {\n        let components: ComponentMeta[] = [\n            { componentName: 'AgCheckbox', componentClass: AgCheckbox },\n            { componentName: 'AgRadioButton', componentClass: AgRadioButton },\n            { componentName: 'AgToggleButton', componentClass: AgToggleButton },\n            { componentName: 'AgInputTextField', componentClass: AgInputTextField },\n            { componentName: 'AgInputTextArea', componentClass: AgInputTextArea },\n            { componentName: 'AgInputNumberField', componentClass: AgInputNumberField },\n            { componentName: 'AgInputRange', componentClass: AgInputRange },\n            { componentName: 'AgSelect', componentClass: AgSelect },\n            { componentName: 'AgSlider', componentClass: AgSlider },\n            { componentName: 'AgAngleSelect', componentClass: AgAngleSelect },\n            { componentName: 'AgColorPicker', componentClass: AgColorPicker },\n            { componentName: 'AgGridBody', componentClass: GridBodyComp },\n            { componentName: 'AgHeaderRoot', componentClass: GridHeaderComp },\n            { componentName: 'AgPagination', componentClass: PaginationComp },\n            { componentName: 'AgOverlayWrapper', componentClass: OverlayWrapperComponent },\n            { componentName: 'AgGroupComponent', componentClass: AgGroupComponent },\n            { componentName: 'AgPanel', componentClass: AgPanel },\n            { componentName: 'AgDialog', componentClass: AgDialog },\n            { componentName: 'AgRowContainer', componentClass: RowContainerComp },\n            { componentName: 'AgFakeHorizontalScroll', componentClass: FakeHScrollComp }\n        ];\n\n        const moduleAgStackComps = this.extractModuleEntity(registeredModules,\n            (module) => module.agStackComponents ? module.agStackComponents : []);\n\n        components = components.concat(moduleAgStackComps);\n\n        return components;\n    }\n\n    private createBeansList(rowModelType: string | undefined, registeredModules: Module[]): any[] | undefined {\n        const rowModelClass = this.getRowModelClass(rowModelType, registeredModules);\n\n        if (!rowModelClass) { return; }\n\n        // beans should only contain SERVICES, it should NEVER contain COMPONENTS\n\n        const beans = [\n            rowModelClass, Beans, RowPositionUtils, CellPositionUtils, HeaderPositionUtils,\n            PaginationAutoPageSizeService, GridApi, UserComponentRegistry, AgComponentUtils,\n            ComponentMetadataProvider, ResizeObserverService, UserComponentFactory,\n            RowContainerHeightService, HorizontalResizeService,\n            PinnedRowModel, DragService, DisplayedGroupCreator, EventService, GridOptionsWrapper,\n            PopupService, SelectionService, FilterManager, ColumnModel, HeaderNavigationService,\n            PaginationProxy, RowRenderer, ExpressionService, ColumnFactory, TemplateService,\n            AlignedGridsService, NavigationService, ValueCache, ValueService, LoggerFactory,\n            ColumnUtils, AutoWidthCalculator, StandardMenuFactory, DragAndDropService, ColumnApi,\n            FocusService, MouseEventService, Environment, CellNavigationService, ValueFormatterService,\n            StylingService, ScrollVisibleService, SortController, ColumnHoverService, ColumnAnimationService,\n            SelectableService, AutoGroupColService, ChangeDetectionService, AnimationFrameService,\n            UndoRedoService, AgStackComponentsRegistry, ColumnDefFactory,\n            RowCssClassCalculator, RowNodeBlockLoader, RowNodeSorter, CtrlsService,\n            PinnedWidthService, RowNodeEventThrottle, CtrlsFactory\n        ];\n\n        const moduleBeans = this.extractModuleEntity(registeredModules, (module) => module.beans ? module.beans : []);\n        beans.push(...moduleBeans);\n\n        // check for duplicates, as different modules could include the same beans that\n        // they depend on, eg ClientSideRowModel in enterprise, and ClientSideRowModel in community\n        const beansNoDuplicates: any[] = [];\n        beans.forEach(bean => {\n            if (beansNoDuplicates.indexOf(bean) < 0) {\n                beansNoDuplicates.push(bean);\n            }\n        });\n\n        return beansNoDuplicates;\n    }\n\n    private extractModuleEntity(moduleEntities: any[], extractor: (module: any) => any) {\n        return [].concat(...moduleEntities.map(extractor));\n    }\n\n    private setColumnsAndData(beans: Beans): void {\n        const columnDefs = beans.gridOptionsWrapper.getColumnDefs();\n        beans.columnModel.setColumnDefs(columnDefs || [], \"gridInitializing\");\n        beans.rowModel.start();\n    }\n\n    private dispatchGridReadyEvent(beans: Beans, gridOptions: GridOptions): void {\n        const readyEvent: GridReadyEvent = {\n            type: Events.EVENT_GRID_READY,\n            api: gridOptions.api!,\n            columnApi: gridOptions.columnApi!\n        };\n        beans.eventService.dispatchEvent(readyEvent);\n    }\n\n    private getRowModelClass(rowModelType: string | undefined, registeredModules: Module[]): any {\n\n        // default to client side\n        if (!rowModelType) {\n            rowModelType = Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        }\n\n        const rowModelClasses: { [name: string]: { new(): IRowModel; }; } = {};\n        registeredModules.forEach(module => {\n            iterateObject(module.rowModels, (key: string, value: { new(): IRowModel; }) => {\n                rowModelClasses[key] = value;\n            });\n        });\n\n        const rowModelClass = rowModelClasses[rowModelType];\n\n        if (exists(rowModelClass)) { return rowModelClass; }\n\n\n\n        if (ModuleRegistry.isPackageBased()) {\n            if ([Constants.ROW_MODEL_TYPE_VIEWPORT, Constants.ROW_MODEL_TYPE_SERVER_SIDE].includes(rowModelType))\n                // If package based only the enterprise row models could be missing.\n                console.error(`AG Grid: Row Model \"${rowModelType}\" not found. Please ensure the package 'ag-grid-enterprise' is imported. Please see: https://www.ag-grid.com/javascript-grid/packages/`);\n            else {\n                console.error('AG Grid: could not find row model for rowModelType ' + rowModelType);\n            }\n        } else {\n            if (rowModelType === Constants.ROW_MODEL_TYPE_INFINITE) {\n                console.error(`AG Grid: Row Model \"Infinite\" not found. Please ensure the ${ModuleNames.InfiniteRowModelModule} module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/`);\n            } else if (rowModelType === Constants.ROW_MODEL_TYPE_VIEWPORT) {\n                console.error(`AG Grid: Row Model \"Viewport\" not found. Please ensure the AG Grid Enterprise Module ${ModuleNames.ViewportRowModelModule} module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/`);\n            } else if (rowModelType === Constants.ROW_MODEL_TYPE_SERVER_SIDE) {\n                console.error(`AG Grid: Row Model \"Server Side\" not found. Please ensure the AG Grid Enterprise Module ${ModuleNames.ServerSideRowModelModule} module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/`);\n            } else if (rowModelType === Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n                console.error(`AG Grid: Row Model \"Client Side\" not found. Please ensure the ${ModuleNames.ClientSideRowModelModule} module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/`);\n            } else {\n                console.error('AG Grid: could not find row model for rowModelType ' + rowModelType);\n            }\n        }\n\n    }\n\n}\n"]}