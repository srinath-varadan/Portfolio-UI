{"version":3,"sources":["../../../src/ts/rendering/cell/cellComp.ts"],"names":[],"mappings":"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","file":"cellComp.js","sourcesContent":["import { Column } from \"../../entities/column\";\nimport { RowNode } from \"../../entities/rowNode\";\nimport { Beans } from \"./../beans\";\nimport { Component } from \"../../widgets/component\";\nimport { ICellEditorComp, ICellEditorParams } from \"../../interfaces/iCellEditor\";\nimport { ICellRendererComp } from \"./../cellRenderers/iCellRenderer\";\nimport { CheckboxSelectionComponent } from \"./../checkboxSelectionComponent\";\nimport { RowCtrl } from \"./../row/rowCtrl\";\nimport { RowDragComp } from \"./../row/rowDragComp\";\nimport { PopupEditorWrapper } from \"./../cellEditors/popupEditorWrapper\";\nimport { DndSourceComp } from \"./../dndSourceComp\";\nimport { TooltipParentComp } from \"../../widgets/customTooltipFeature\";\nimport { setAriaColIndex, setAriaDescribedBy, setAriaRole } from \"../../utils/aria\";\nimport { escapeString } from \"../../utils/string\";\nimport { missing } from \"../../utils/generic\";\nimport { addStylesToElement, clearElement, loadTemplate, removeFromParent } from \"../../utils/dom\";\nimport { CellCtrl, ICellComp } from \"./cellCtrl\";\nimport { UserCompDetails } from \"../../components/framework/userComponentFactory\";\nimport { _ } from \"../../utils\";\n\nexport class CellComp extends Component implements TooltipParentComp {\n\n    private eCellWrapper: HTMLElement | undefined;\n    private eCellValue: HTMLElement | undefined;\n\n    private beans: Beans;\n    private column: Column;\n    private rowNode: RowNode;\n    private eRow: HTMLElement;\n\n    private includeSelection: boolean;\n    private includeRowDrag: boolean;\n    private includeDndSource: boolean;\n\n    private forceWrapper: boolean;\n\n    private checkboxSelectionComp: CheckboxSelectionComponent | undefined;\n    private dndSourceComp: DndSourceComp | undefined;\n    private rowDraggingComp: RowDragComp | undefined;\n\n    private hideEditorPopup: Function | null | undefined;\n    private cellEditorPopupWrapper: PopupEditorWrapper | undefined;\n    private cellEditor: ICellEditorComp | null | undefined;\n    private cellEditorGui: HTMLElement | null;\n\n    private cellRenderer: ICellRendererComp | null | undefined;\n    private cellRendererGui: HTMLElement | null;\n    private cellRendererClass: any;\n\n    private rowCtrl: RowCtrl | null;\n\n    private cellCtrl: CellCtrl;\n\n    private firstRender: boolean;\n\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    private rendererVersion = 0;\n    private editorVersion = 0;\n\n    constructor(beans: Beans, cellCtrl: CellCtrl,\n        printLayout: boolean, eRow: HTMLElement, editingRow: boolean) {\n        super();\n        this.beans = beans;\n        this.column = cellCtrl.getColumn();\n        this.rowNode = cellCtrl.getRowNode();\n        this.rowCtrl = cellCtrl.getRowCtrl();\n        this.eRow = eRow;\n\n        this.setTemplate(/* html */`<div comp-id=\"${this.getCompId()}\"/>`);\n\n        const eGui = this.getGui();\n\n        this.forceWrapper = cellCtrl.isForceWrapper();\n\n        this.refreshWrapper(false);\n\n        const setAttribute = (name: string, value: string | null | undefined, element?: HTMLElement) => {\n            const actualElement = element ? element : eGui;\n            if (value != null && value != '') {\n                actualElement.setAttribute(name, value);\n            } else {\n                actualElement.removeAttribute(name);\n            }\n        };\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setUserStyles: styles => addStylesToElement(eGui, styles),\n            getFocusableElement: () => this.getFocusableElement(),\n            setTabIndex: tabIndex => setAttribute('tabindex', tabIndex.toString()),\n            setRole: role => setAriaRole(eGui, role),\n            setColId: colId => setAttribute('col-id', colId),\n            setTitle: title => setAttribute('title', title),\n\n            setIncludeSelection: include => this.includeSelection = include,\n            setIncludeRowDrag: include => this.includeRowDrag = include,\n            setIncludeDndSource: include => this.includeDndSource = include,\n\n            setRenderDetails: (compDetails, valueToDisplay, force) =>\n                this.setRenderDetails(compDetails, valueToDisplay, force),\n            setEditDetails: (compDetails, popup, position) =>\n                this.setEditDetails(compDetails, popup, position),\n\n            getCellEditor: () => this.cellEditor || null,\n            getCellRenderer: () => this.cellRenderer || null,\n            getParentOfValue: () => this.getParentOfValue()\n        };\n\n        this.cellCtrl = cellCtrl;\n        cellCtrl.setComp(compProxy, this.getGui(), this.eCellWrapper, printLayout, editingRow);\n    }\n\n    private getParentOfValue(): HTMLElement {\n        if (this.eCellValue) {\n            // if not editing, and using wrapper, then value goes in eCellValue\n            return this.eCellValue;\n        }\n        if (this.eCellWrapper) {\n            // if editing, and using wrapper, value (cell editor) goes in eCellWrapper\n            return this.eCellWrapper;\n        }\n\n        // if editing or rendering, and not using wrapper, value (or comp) is directly inside cell\n        return this.getGui();\n    }\n\n    private setRenderDetails(compDetails: UserCompDetails | undefined, valueToDisplay: any, forceNewCellRendererInstance: boolean): void {\n        // this can happen if the users asks for the cell to refresh, but we are not showing the vale as we are editing\n        const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\n        if (isInlineEditing) { return; }\n\n        // this means firstRender will be true for one pass only, as it's initialised to undefined\n        this.firstRender = this.firstRender == null;\n\n\n        // if display template has changed, means any previous Cell Renderer is in the wrong location\n        const controlWrapperChanged = this.refreshWrapper(false);\n\n        // all of these have dependencies on the eGui, so only do them after eGui is set\n        if (compDetails) {\n            const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\n            const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\n            if (!cellRendererRefreshSuccessful) {\n                this.destroyRenderer();\n                this.createCellRendererInstance(compDetails);\n            }\n        } else {\n            this.destroyRenderer();\n            this.insertValueWithoutCellRenderer(valueToDisplay);\n        }\n    }\n\n    private setEditDetails(compDetails: UserCompDetails | undefined, popup?: boolean, position?: string): void {\n        if (compDetails) {\n            this.createCellEditorInstance(compDetails, popup, position);\n        } else {\n            this.destroyEditor();\n        }\n    }\n\n    private removeControls(): void {\n        this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp);\n        this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp);\n        this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);\n    }\n\n    // returns true if wrapper was changed\n    private refreshWrapper(editing: boolean): boolean {\n        const providingControls = this.includeRowDrag || this.includeDndSource || this.includeSelection;\n        const usingWrapper = providingControls || this.forceWrapper;\n\n        const putWrapperIn = usingWrapper && this.eCellWrapper == null;\n        if (putWrapperIn) {\n            this.eCellWrapper = loadTemplate(`<div class=\"ag-cell-wrapper\" role=\"presentation\"></div>`);\n            this.getGui().appendChild(this.eCellWrapper);\n        }\n        const takeWrapperOut = !usingWrapper && this.eCellWrapper != null;\n        if (takeWrapperOut) {\n            removeFromParent(this.eCellWrapper!);\n            this.eCellWrapper = undefined;\n        }\n\n        this.addOrRemoveCssClass('ag-cell-value', !usingWrapper);\n\n        const usingCellValue = !editing && usingWrapper;\n        const putCellValueIn = usingCellValue && this.eCellValue == null;\n        if (putCellValueIn) {\n            this.eCellValue = loadTemplate(`<span class=\"ag-cell-value\" role=\"presentation\"></span>`);\n            this.eCellWrapper!.appendChild(this.eCellValue);\n        }\n        const takeCellValueOut = !usingCellValue && this.eCellValue != null;\n        if (takeCellValueOut) {\n            removeFromParent(this.eCellValue!);\n            this.eCellValue = undefined;\n        }\n\n        const templateChanged = putWrapperIn || takeWrapperOut || putCellValueIn || takeCellValueOut;\n\n        if (templateChanged) {\n            this.removeControls();\n        }\n\n        if (!editing && providingControls) {\n            this.addControls();\n        }\n\n        return templateChanged;\n    }\n\n    private addControls(): void {\n        const id = this.eCellValue!.id = `cell-${this.getCompId()}`;\n        const describedByIds: string[] = [];\n\n        if (this.includeRowDrag) {\n            if (this.rowDraggingComp == null) {\n                this.rowDraggingComp = this.cellCtrl.createRowDragComp();\n                if (this.rowDraggingComp) {\n                    // put the checkbox in before the value\n                    this.eCellWrapper!.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue!);\n                }\n            }\n        }\n\n        if (this.includeDndSource) {\n            if (this.dndSourceComp == null) {\n                this.dndSourceComp = this.cellCtrl.createDndSource();\n                // put the checkbox in before the value\n                this.eCellWrapper!.insertBefore(this.dndSourceComp.getGui(), this.eCellValue!);\n            }\n        }\n\n        if (this.includeSelection) {\n            if (this.checkboxSelectionComp == null) {\n                this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox();\n                this.eCellWrapper!.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue!);\n            }\n            describedByIds.push(this.checkboxSelectionComp.getCheckboxId());\n        }\n\n        describedByIds.push(id);\n\n        setAriaDescribedBy(this.getGui(), describedByIds.join(' '));\n    }\n\n    private createCellEditorInstance(compDetails: UserCompDetails, popup?: boolean, position?: string): void {\n        const versionCopy = this.editorVersion;\n\n        const cellEditorPromise = compDetails.newAgStackInstance();\n        if (!cellEditorPromise) { return; } // if empty, userComponentFactory already did a console message\n\n        const { params } = compDetails;\n        cellEditorPromise.then(c => this.afterCellEditorCreated(versionCopy, c!, params, popup, position));\n\n        // if we don't do this, and editor component is async, then there will be a period\n        // when the component isn't present and keyboard navigation won't work - so example\n        // of user hitting tab quickly (more quickly than renderers getting created) won't work\n        const cellEditorAsync = missing(this.cellEditor);\n        if (cellEditorAsync && params.cellStartedEdit) {\n            this.cellCtrl.focusCell(true);\n        }\n    }\n\n    private insertValueWithoutCellRenderer(valueToDisplay: any): void {\n        const eParent = this.getParentOfValue();\n        clearElement(eParent);\n\n        const escapedValue = valueToDisplay != null ? escapeString(valueToDisplay) : null;\n        if (escapedValue != null) {\n            eParent.innerHTML = escapedValue;\n        }\n    }\n\n    private destroyEditorAndRenderer(): void {\n        this.destroyRenderer();\n        this.destroyEditor();\n    }\n\n    private destroyRenderer(): void {\n        const {context} = this.beans;\n        this.cellRenderer = context.destroyBean(this.cellRenderer);\n        removeFromParent(this.cellRendererGui);\n        this.cellRendererGui = null;\n        this.rendererVersion++;\n    }\n\n    private destroyEditor(): void {\n        const {context} = this.beans;\n\n        if (this.hideEditorPopup) { this.hideEditorPopup(); }\n        this.hideEditorPopup = undefined;\n\n        this.cellEditor = context.destroyBean(this.cellEditor);\n        this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\n\n        removeFromParent(this.cellEditorGui);\n        this.cellEditorGui = null;\n\n        this.editorVersion++;\n    }\n\n    private refreshCellRenderer(compClassAndParams: UserCompDetails): boolean {\n        if (this.cellRenderer == null || this.cellRenderer.refresh == null) { return false; }\n\n        // if different Cell Renderer configured this time (eg user is using selector, and\n        // returns different component) then don't refresh, force recreate of Cell Renderer\n        if (this.cellRendererClass !== compClassAndParams.componentClass) { return false; }\n\n        // take any custom params off of the user\n        const result = this.cellRenderer.refresh(compClassAndParams.params);\n\n        // NOTE on undefined: previous version of the cellRenderer.refresh() interface\n        // returned nothing, if the method existed, we assumed it refreshed. so for\n        // backwards compatibility, we assume if method exists and returns nothing,\n        // that it was successful.\n        return result === true || result === undefined;\n    }\n\n    private createCellRendererInstance(compDetails: UserCompDetails): void {\n        // never use task service if angularCompileRows=true, as that assume the cell renderers\n        // are finished when the row is created. also we never use it if animation frame service\n        // is turned off.\n        // and lastly we never use it if doing auto-height, as the auto-height service checks the\n        // row height directly after the cell is created, it doesn't wait around for the tasks to complete\n        const angularCompileRows = this.beans.gridOptionsWrapper.isAngularCompileRows();\n        const suppressAnimationFrame = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();\n        const useTaskService = !angularCompileRows && !suppressAnimationFrame;\n\n        const displayComponentVersionCopy = this.rendererVersion;\n\n        const {componentClass} = compDetails;\n\n        const createCellRendererFunc = () => {\n            const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\n            if (staleTask) { return; }\n\n            // this can return null in the event that the user has switched from a renderer component to nothing, for example\n            // when using a cellRendererSelect to return a component or null depending on row data etc\n            const componentPromise = compDetails.newAgStackInstance();\n            const callback = this.afterCellRendererCreated.bind(this, displayComponentVersionCopy, componentClass);\n            if (componentPromise) {\n                componentPromise.then(callback);\n            }\n        };\n\n        // we only use task service when rendering for first time, which means it is not used when doing edits.\n        // if we changed this (always use task service) would make sense, however it would break tests, possibly\n        // test of users.\n        if (useTaskService && this.firstRender) {\n            this.beans.animationFrameService.createTask(createCellRendererFunc, this.rowNode.rowIndex!, 'createTasksP2');\n        } else {\n            createCellRendererFunc();\n        }\n    }\n\n    public getCtrl(): CellCtrl {\n        return this.cellCtrl;\n    }\n\n    public getRowCtrl(): RowCtrl | null {\n        return this.rowCtrl;\n    }\n\n    public getCellRenderer(): ICellRendererComp | null | undefined {\n        return this.cellRenderer;\n    }\n\n    public getCellEditor(): ICellEditorComp | null | undefined {\n        return this.cellEditor;\n    }\n\n    private afterCellRendererCreated(cellRendererVersion: number, cellRendererClass: any, cellRenderer: ICellRendererComp): void {\n        const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\n\n        if (staleTask) {\n            this.beans.context.destroyBean(cellRenderer);\n            return;\n        }\n\n        this.cellRenderer = cellRenderer;\n        this.cellRendererClass = cellRendererClass;\n        this.cellRendererGui = this.cellRenderer.getGui();\n\n        if (this.cellRendererGui != null) {\n            const eParent = this.getParentOfValue();\n            clearElement(eParent);\n            eParent.appendChild(this.cellRendererGui);\n        }\n    }\n\n    private afterCellEditorCreated(requestVersion: number, cellEditor: ICellEditorComp, params: ICellEditorParams, popup?: boolean, position?: string): void {\n\n        // if editingCell=false, means user cancelled the editor before component was ready.\n        // if versionMismatch, then user cancelled the edit, then started the edit again, and this\n        //   is the first editor which is now stale.\n        const staleComp = requestVersion !== this.editorVersion;\n\n        if (staleComp) {\n            this.beans.context.destroyBean(cellEditor);\n            return;\n        }\n\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n            this.beans.context.destroyBean(cellEditor);\n            this.cellCtrl.stopEditing();\n            return;\n        }\n\n        if (!cellEditor.getGui) {\n            console.warn(`AG Grid: cellEditor for column ${this.column.getId()} is missing getGui() method`);\n            this.beans.context.destroyBean(cellEditor);\n            return;\n        }\n\n        this.cellEditor = cellEditor;\n        this.cellEditorGui = cellEditor.getGui();\n\n        const cellEditorInPopup = popup || (cellEditor.isPopup !== undefined && cellEditor.isPopup());\n        if (cellEditorInPopup) {\n            if (!popup) {\n                this.cellCtrl.hackSayEditingInPopup();\n            }\n            this.addPopupCellEditor(params, position);\n        } else {\n            this.addInCellEditor();\n        }\n\n        if (cellEditor.afterGuiAttached) {\n            cellEditor.afterGuiAttached();\n        }\n    }\n\n    private addInCellEditor(): void {\n        const eGui = this.getGui();\n\n        // if focus is inside the cell, we move focus to the cell itself\n        // before removing it's contents, otherwise errors could be thrown.\n        const eDocument = this.beans.gridOptionsWrapper.getDocument();\n        if (eGui.contains(eDocument.activeElement)) {\n            eGui.focus();\n        }\n\n        this.destroyRenderer();\n        this.refreshWrapper(true);\n        this.clearParentOfValue();\n        if (this.cellEditorGui) {\n            const eParent = this.getParentOfValue();\n            eParent.appendChild(this.cellEditorGui);\n        }\n    }\n\n    private addPopupCellEditor(params: ICellEditorParams, position?: string): void {\n        if (this.beans.gridOptionsWrapper.isFullRowEdit()) {\n            console.warn('AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both ' +\n                '- either turn off fullRowEdit, or stop using popup editors.');\n        }\n\n        const cellEditor = this.cellEditor!;\n\n        // if a popup, then we wrap in a popup editor and return the popup\n        this.cellEditorPopupWrapper = this.beans.context.createBean(new PopupEditorWrapper(params));\n        const ePopupGui = this.cellEditorPopupWrapper.getGui();\n        if (this.cellEditorGui) {\n            ePopupGui.appendChild(this.cellEditorGui);\n        }\n\n        const popupService = this.beans.popupService;\n\n        const useModelPopup = this.beans.gridOptionsWrapper.isStopEditingWhenCellsLoseFocus();\n\n        // see if position provided by colDef, if not then check old way of method on cellComp\n        const positionToUse = position != null ? position : cellEditor.getPopupPosition ? cellEditor.getPopupPosition() : 'over';\n\n        const positionParams = {\n            column: this.column,\n            rowNode: this.rowNode,\n            type: 'popupCellEditor',\n            eventSource: this.getGui(),\n            ePopup: ePopupGui,\n            keepWithinBounds: true\n        };\n\n        const positionCallback = positionToUse === 'under' ?\n            popupService.positionPopupUnderComponent.bind(popupService, positionParams)\n            : popupService.positionPopupOverComponent.bind(popupService, positionParams);\n\n        const translate = this.beans.gridOptionsWrapper.getLocaleTextFunc();\n\n        const addPopupRes = popupService.addPopup({\n            modal: useModelPopup,\n            eChild: ePopupGui,\n            closeOnEsc: true,\n            closedCallback: () => { this.cellCtrl.onPopupEditorClosed(); },\n            anchorToElement: this.getGui(),\n            positionCallback,\n            ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n        });\n        if (addPopupRes) {\n            this.hideEditorPopup = addPopupRes.hideFunc;\n        }\n    }\n\n    public detach(): void {\n        this.eRow.removeChild(this.getGui());\n    }\n\n    // if the row is also getting destroyed, then we don't need to remove from dom,\n    // as the row will also get removed, so no need to take out the cells from the row\n    // if the row is going (removing is an expensive operation, so only need to remove\n    // the top part)\n    //\n    // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n    public destroy(): void {\n        this.cellCtrl.stopEditing();\n\n        this.destroyEditorAndRenderer();\n        this.removeControls();\n\n        super.destroy();\n    }\n\n    private clearParentOfValue(): void {\n        const eGui = this.getGui();\n\n        // if focus is inside the cell, we move focus to the cell itself\n        // before removing it's contents, otherwise errors could be thrown.\n        const eDocument = this.beans.gridOptionsWrapper.getDocument();\n        if (eGui.contains(eDocument.activeElement)) {\n            eGui.focus({\n                preventScroll: true\n            });\n        }\n\n        clearElement(this.getParentOfValue());\n    }\n}\n"]}