{"version":3,"sources":["../../../src/ts/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts"],"names":[],"mappings":";;;;;;;;AAGA,0DAAuD;AAKvD,MAAsB,sBAAyD,SAAQ,qBAAS;IAI5F,YAAY,QAAgB,EAAE,IAAO;QACjC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;CACJ;AAZD,wDAYC","file":"abstractHeaderCellComp.js","sourcesContent":["import { ColumnGroup } from \"../../../entities/columnGroup\";\nimport { Column } from \"../../../entities/column\";\nimport { isUserSuppressingHeaderKeyboardEvent } from \"../../../utils/keyboard\";\nimport { Component } from \"../../../widgets/component\";\nimport { Autowired } from \"../../../context/context\";\nimport { FocusService } from \"../../../focusService\";\nimport { AbstractHeaderCellCtrl } from \"./abstractHeaderCellCtrl\";\n\nexport abstract class AbstractHeaderCellComp<T extends AbstractHeaderCellCtrl> extends Component {\n\n    protected ctrl: T;\n\n    constructor(template: string, ctrl: T) {\n        super(template);\n        this.ctrl = ctrl;\n    }\n\n    public getCtrl(): T {\n        return this.ctrl;\n    }\n}"]}