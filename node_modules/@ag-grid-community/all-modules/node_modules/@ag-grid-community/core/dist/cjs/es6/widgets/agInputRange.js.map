{"version":3,"sources":["../../../src/ts/widgets/agInputRange.ts"],"names":[],"mappings":";;;;;;;;AAAA,iEAA2E;AAQ3E,MAAa,YAAa,SAAQ,2CAA2D;IAIzF,YAAY,MAAoB;QAC5B,KAAK,CAAC,MAAM,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAES,aAAa;QACnB,KAAK,CAAC,aAAa,EAAE,CAAC;QAEtB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAEvC,IAAI,GAAG,IAAI,IAAI,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,GAAG,IAAI,IAAI,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC;IAES,iBAAiB;QACvB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YAChD,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YAE7B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,WAAW,CAAC,KAAa;QAC5B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAEjB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,WAAW,CAAC,KAAa;QAC5B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAEjB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,OAAO,CAAC,KAAa;QACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEnD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,QAAQ,CAAC,KAAa,EAAE,MAAgB;QAC3C,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;YAClB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC5D;QAED,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;YAClB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC5D;QAED,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAE1C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAE1B,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;AArED,oCAqEC","file":"agInputRange.js","sourcesContent":["import { IInputField, AgAbstractInputField } from \"./agAbstractInputField\";\n\ninterface IInputRange extends IInputField {\n    min?: number;\n    max?: number;\n    step?: number;\n}\n\nexport class AgInputRange extends AgAbstractInputField<HTMLInputElement, string, IInputRange> {\n    private min: number;\n    private max: number;\n\n    constructor(config?: IInputRange) {\n        super(config, 'ag-range-field', 'range');\n    }\n\n    protected postConstruct() {\n        super.postConstruct();\n\n        const { min, max, step } = this.config;\n\n        if (min != null) {\n            this.setMinValue(min);\n        }\n\n        if (max != null) {\n            this.setMaxValue(max);\n        }\n\n        this.setStep(step || 1);\n    }\n\n    protected addInputListeners() {\n        this.addManagedListener(this.eInput, 'input', (e) => {\n            const value = e.target.value;\n\n            this.setValue(value);\n        });\n    }\n\n    public setMinValue(value: number): this {\n        this.min = value;\n\n        this.eInput.setAttribute('min', value.toString());\n\n        return this;\n    }\n\n    public setMaxValue(value: number): this {\n        this.max = value;\n\n        this.eInput.setAttribute('max', value.toString());\n\n        return this;\n    }\n\n    public setStep(value: number): this {\n        this.eInput.setAttribute('step', value.toString());\n\n        return this;\n    }\n\n    public setValue(value: string, silent?: boolean): this {\n        if (this.min != null) {\n            value = Math.max(parseFloat(value), this.min).toString();\n        }\n\n        if (this.max != null) {\n            value = Math.min(parseFloat(value), this.max).toString();\n        }\n\n        const ret = super.setValue(value, silent);\n\n        this.eInput.value = value;\n\n        return ret;\n    }\n}\n"]}