{"version":3,"sources":["../../../src/ts/rendering/columnHoverService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,gDAAoE;AACpE,sCAA4D;AAE5D,kDAA+C;AAK/C,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,mBAAQ;IAOrC,YAAY,CAAC,OAAiB;QACjC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,MAAM,KAAK,GAA4B;YACnC,IAAI,EAAE,eAAM,CAAC,0BAA0B;YACvC,GAAG,EAAE,IAAI,CAAC,OAAO;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC5B,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAEM,cAAc;QACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,MAAM,KAAK,GAA4B;YACnC,IAAI,EAAE,eAAM,CAAC,0BAA0B;YACvC,GAAG,EAAE,IAAI,CAAC,OAAO;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC5B,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAEM,SAAS,CAAC,MAAc;QAC3B,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/E,CAAC;CACJ,CAAA;AA5B2B;IAAvB,mBAAS,CAAC,WAAW,CAAC;qDAA8B;AAC/B;IAArB,mBAAS,CAAC,SAAS,CAAC;mDAA0B;AAHtC,kBAAkB;IAD9B,cAAI,CAAC,oBAAoB,CAAC;GACd,kBAAkB,CA8B9B;AA9BY,gDAAkB","file":"columnHoverService.js","sourcesContent":["import { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { Events, ColumnHoverChangedEvent } from \"../events\";\nimport { Column } from \"../entities/column\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { ColumnApi } from \"../columns/columnApi\";\nimport { GridApi } from \"../gridApi\";\n\n@Bean('columnHoverService')\nexport class ColumnHoverService extends BeanStub {\n\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n\n    private selectedColumns: Column[] | null;\n\n    public setMouseOver(columns: Column[]): void {\n        this.selectedColumns = columns;\n        const event: ColumnHoverChangedEvent = {\n            type: Events.EVENT_COLUMN_HOVER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    }\n\n    public clearMouseOver(): void {\n        this.selectedColumns = null;\n        const event: ColumnHoverChangedEvent = {\n            type: Events.EVENT_COLUMN_HOVER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    }\n\n    public isHovered(column: Column): boolean {\n        return !!this.selectedColumns && this.selectedColumns.indexOf(column) >= 0;\n    }\n}\n"]}