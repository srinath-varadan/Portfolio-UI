{"version":3,"sources":["../../../src/ts/rendering/cellRenderers/groupCellRenderer.ts"],"names":[],"mappings":"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","file":"groupCellRenderer.js","sourcesContent":["import { UserCompDetails } from \"../../components/framework/userComponentFactory\";\nimport { setAriaRole } from \"../../utils/aria\";\nimport { setDisplayed } from \"../../utils/dom\";\nimport { Component } from \"../../widgets/component\";\nimport { RefSelector } from \"../../widgets/componentAnnotations\";\nimport { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer } from \"./groupCellRendererCtrl\";\nimport { ICellRendererComp } from \"./iCellRenderer\";\n\nexport class GroupCellRenderer extends Component implements ICellRendererComp {\n\n    private static TEMPLATE = /* html */\n        `<span class=\"ag-cell-wrapper\">\n            <span class=\"ag-group-expanded\" ref=\"eExpanded\"></span>\n            <span class=\"ag-group-contracted\" ref=\"eContracted\"></span>\n            <span class=\"ag-group-checkbox ag-invisible\" ref=\"eCheckbox\"></span>\n            <span class=\"ag-group-value\" ref=\"eValue\"></span>\n            <span class=\"ag-group-child-count\" ref=\"eChildCount\"></span>\n        </span>`;\n\n    @RefSelector('eExpanded') private eExpanded: HTMLElement;\n    @RefSelector('eContracted') private eContracted: HTMLElement;\n    @RefSelector('eCheckbox') private eCheckbox: HTMLElement;\n    @RefSelector('eValue') private eValue: HTMLElement;\n    @RefSelector('eChildCount') private eChildCount: HTMLElement;\n\n    // this cell renderer\n    private innerCellRenderer: ICellRendererComp;\n\n    constructor() {\n        super(GroupCellRenderer.TEMPLATE);\n    }\n\n    public init(params: GroupCellRendererParams): void {\n\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (compDetails, valueToDisplay) => this.setRenderDetails(compDetails, valueToDisplay),\n            setChildCount: count => this.eChildCount.innerHTML = count,\n            addOrRemoveCssClass: (cssClass, value) => this.addOrRemoveCssClass(cssClass, value),\n            setContractedDisplayed: expanded => setDisplayed(this.eContracted, expanded),\n            setExpandedDisplayed: expanded => setDisplayed(this.eExpanded, expanded),\n            setCheckboxVisible: visible => this.eCheckbox.classList.toggle('ag-invisible', !visible)\n        };\n\n        const ctrl = this.createManagedBean(new GroupCellRendererCtrl());\n        const fullWidth = !params.colDef;\n        const eGui = this.getGui();\n        ctrl.init(compProxy, eGui, this.eCheckbox, this.eExpanded, this.eContracted, this.constructor, params);\n\n        if (fullWidth) {\n            setAriaRole(eGui, 'gridcell');\n        }\n    }\n\n    private setRenderDetails(compDetails: UserCompDetails | undefined, valueToDisplay: any): void {\n\n        if (compDetails) {\n            const componentPromise = compDetails.newAgStackInstance();\n            if (!componentPromise) { return; }\n            componentPromise.then(comp => {\n                if (!comp) { return; }\n                const destroyComp = () => this.context.destroyBean(comp);\n                if (this.isAlive()) {\n                    this.eValue.appendChild(comp.getGui());\n                    this.addDestroyFunc(destroyComp);\n                } else {\n                    destroyComp();\n                }\n            });\n        } else {\n            this.eValue.innerText = valueToDisplay;\n        }\n    }\n\n    // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n    // so we need to have public here instead of private or protected\n    public destroy(): void {\n        this.getContext().destroyBean(this.innerCellRenderer);\n        super.destroy();\n    }\n\n    public refresh(): boolean {\n        return false;\n    }\n}\n"]}