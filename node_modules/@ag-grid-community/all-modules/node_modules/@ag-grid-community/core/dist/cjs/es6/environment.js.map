{"version":3,"sources":["../../../src/ts/environment.ts"],"names":[],"mappings":"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","file":"environment.js","sourcesContent":["import { Bean, Autowired } from './context/context';\nimport { BeanStub } from \"./context/beanStub\";\nimport { doOnce } from './utils/function';\n\nexport type SASS_PROPERTIES = 'headerHeight' | 'headerCellMinWidth' | 'listItemHeight' | 'rowHeight' | 'chartMenuPanelWidth';\n\ninterface HardCodedSize {\n    [key: string]: {\n        [key in SASS_PROPERTIES]?: number;\n    };\n}\n\nconst MAT_GRID_SIZE = 8;\nconst BASE_GRID_SIZE = 4;\nconst BALHAM_GRID_SIZE = 4;\nconst ALPINE_GRID_SIZE = 6;\n\nconst HARD_CODED_SIZES: HardCodedSize = {\n    // this item is required for custom themes\n    'ag-theme-custom': {\n        headerHeight: 25,\n        headerCellMinWidth: 24,\n        listItemHeight: BASE_GRID_SIZE * 5,\n        rowHeight: 25,\n        chartMenuPanelWidth: 220\n    },\n    'ag-theme-material': {\n        headerHeight: MAT_GRID_SIZE * 7,\n        headerCellMinWidth: 48,\n        listItemHeight: MAT_GRID_SIZE * 4,\n        rowHeight: MAT_GRID_SIZE * 6,\n        chartMenuPanelWidth: 240\n    },\n    'ag-theme-balham': {\n        headerHeight: BALHAM_GRID_SIZE * 8,\n        headerCellMinWidth: 24,\n        listItemHeight: BALHAM_GRID_SIZE * 6,\n        rowHeight: BALHAM_GRID_SIZE * 7,\n        chartMenuPanelWidth: 220\n    },\n    'ag-theme-alpine': {\n        headerHeight: ALPINE_GRID_SIZE * 8,\n        headerCellMinWidth: 36,\n        listItemHeight: ALPINE_GRID_SIZE * 4,\n        rowHeight: ALPINE_GRID_SIZE * 7,\n        chartMenuPanelWidth: 240\n    }\n};\n\n/**\n * this object contains a list of Sass variables and an array\n * of CSS styles required to get the correct value.\n * eg. $virtual-item-height requires a structure, so we can get its height.\n * <div class=\"ag-theme-balham\">\n *     <div class=\"ag-virtual-list-container\">\n *         <div class=\"ag-virtual-list-item\"></div>\n *     </div>\n * </div>\n */\nconst SASS_PROPERTY_BUILDER: { [key in SASS_PROPERTIES]: string[] } = {\n    headerHeight: ['ag-header-row'],\n    headerCellMinWidth: ['ag-header-cell'],\n    listItemHeight: ['ag-virtual-list-item'],\n    rowHeight: ['ag-row'],\n    chartMenuPanelWidth: ['ag-chart-docked-container']\n};\n\nconst CALCULATED_SIZES: HardCodedSize = {};\n\n@Bean('environment')\nexport class Environment extends BeanStub {\n\n    @Autowired('eGridDiv') private eGridDiv: HTMLElement;\n\n    public getSassVariable(theme: string, key: SASS_PROPERTIES): number | undefined {\n        const useTheme = 'ag-theme-' + (theme.match('material') ? 'material' : theme.match('balham') ? 'balham' : theme.match('alpine') ? 'alpine' : 'custom');\n        const defaultValue = HARD_CODED_SIZES[useTheme][key];\n        let calculatedValue = 0;\n\n        if (!CALCULATED_SIZES[theme]) {\n            CALCULATED_SIZES[theme] = {};\n        }\n\n        const size = CALCULATED_SIZES[theme][key];\n\n        if (size != null) {\n            return size;\n        }\n\n        if (SASS_PROPERTY_BUILDER[key]) {\n            const classList = SASS_PROPERTY_BUILDER[key];\n            const div = document.createElement('div');\n            div.classList.add(theme);\n            div.style.position = 'absolute';\n\n            const el: HTMLDivElement = classList.reduce((prevEl: HTMLDivElement, currentClass: string) => {\n                const currentDiv = document.createElement('div');\n                currentDiv.style.position = 'static';\n                currentDiv.classList.add(currentClass);\n                prevEl.appendChild(currentDiv);\n\n                return currentDiv;\n            }, div);\n\n            if (document.body) {\n                document.body.appendChild(div);\n                const sizeName = key.toLowerCase().indexOf('height') !== -1 ? 'height' : 'width';\n                calculatedValue = parseInt(window.getComputedStyle(el)[sizeName]!, 10);\n                document.body.removeChild(div);\n            }\n        }\n\n        CALCULATED_SIZES[theme][key] = calculatedValue || defaultValue;\n\n        return CALCULATED_SIZES[theme][key];\n    }\n\n    public isThemeDark(): boolean {\n        const { theme } = this.getTheme();\n        return !!theme && theme.indexOf('dark') >= 0;\n    }\n\n    public chartMenuPanelWidth() {\n        const theme = this.getTheme().themeFamily;\n        return this.getSassVariable(theme!, 'chartMenuPanelWidth');\n    }\n\n    public getTheme(): { theme?: string; el?: HTMLElement; themeFamily?: string; } {\n        const reg = /\\bag-(material|(?:theme-([\\w\\-]*)))\\b/;\n        let el: HTMLElement | undefined = this.eGridDiv;\n        let themeMatch: RegExpMatchArray | null = null;\n\n        while (el) {\n            themeMatch = reg.exec(el.className);\n            if (!themeMatch) {\n                el = el.parentElement || undefined;\n            } else {\n                break;\n            }\n        }\n\n        if (!themeMatch) { return {}; }\n\n        const theme = themeMatch[0];\n        const usingOldTheme = themeMatch[2] === undefined;\n\n        if (usingOldTheme) {\n            const newTheme = theme.replace('ag-', 'ag-theme-');\n            doOnce(() => console.warn(`AG Grid: As of v19 old theme are no longer provided. Please replace ${theme} with ${newTheme}.`), 'using-old-theme');\n        }\n\n        return { theme, el, themeFamily: theme.replace(/-dark$/, '') };\n    }\n}\n"]}