{"version":3,"sources":["../../../src/ts/interfaces/iSetFilter.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"iSetFilter.js","sourcesContent":["import { ICellRendererComp, ICellRendererFunc } from '../rendering/cellRenderers/iCellRenderer';\nimport { ColDef, ValueFormatterParams } from '../entities/colDef';\nimport { IProvidedFilter, IProvidedFilterParams } from '../filter/provided/providedFilter';\nimport { Column } from '../entities/column';\nimport { GridApi } from '../gridApi';\nimport { ColumnApi } from '../columns/columnApi';\nimport { ProvidedFilterModel } from './iFilter';\nimport { AgPromise } from '../utils/promise';\n\nexport type SetFilterModelValue = (string | null)[];\nexport interface SetFilterModel extends ProvidedFilterModel {\n    filterType?: 'set';\n    values: SetFilterModelValue;\n}\n\n/** Interface contract for the public aspects of the SetFilter implementation. */\nexport interface ISetFilter extends IProvidedFilter {\n    /**\n     * Returns a model representing the current state of the filter, or `null` if the filter is\n     * not active.\n     */\n    getModel(): SetFilterModel | null;\n\n    /**\n     * Sets the state of the filter using the supplied model. Providing `null` as the model will\n     * de-activate the filter.\n     * \n     * **Note:** if you are [providing values asynchronously](/filter-set-filter-list/#asynchronous-values)\n     * to the Set Filter, you need to wait for these changes to be applied before performing any further\n     * actions by waiting on the returned grid promise, e.g. \n     * `filter.setModel({ values: ['a', 'b'] }).then(function() { gridApi.onFilterChanged(); });`\n     */\n    setModel(model: SetFilterModel | null): void | AgPromise<void>;\n\n    /** Returns the full list of unique values used by the Set Filter. */\n    getValues(): SetFilterModelValue;\n\n    /** Sets the values used in the Set Filter on the fly. */\n    setFilterValues(values: SetFilterModelValue): void;\n    /**\n     * Refreshes the values shown in the filter from the original source. For example, if a\n     * callback was provided, the callback will be executed again and the filter will refresh using\n     * the values returned.\n     */\n    refreshFilterValues(): void;\n    /**\n     * Resets the Set Filter to use values from the grid, rather than any values that have been\n     * provided directly.\n     */\n    resetFilterValues(): void;\n\n    /** Returns the current mini-filter text. */\n    getMiniFilter(): string | null;\n    /** Sets the text in the Mini Filter at the top of the filter (the 'quick search' in the popup). */\n    setMiniFilter(newMiniFilter: string | null): void;\n\n    /** Returns the current UI state (potentially un-applied). */\n    getModelFromUi(): SetFilterModel | null;\n}\n\nexport interface SetFilterValuesFuncParams {\n    /** The function to call with the values to load into the filter once they are ready. */\n    success: (values: string[]) => void;\n    /** The column definition from which the set filter is invoked. */\n    colDef: ColDef;\n    /** Column from which the set filter is invoked. */\n    column: Column;\n    columnApi: ColumnApi;\n    api: GridApi;\n    /** The context as provided on `gridOptions.context` */\n    context: any;\n}\n\nexport type SetFilterValuesFunc = (params: SetFilterValuesFuncParams) => void;\nexport type SetFilterValues = SetFilterValuesFunc | any[];\n\nexport interface ISetFilterParams extends IProvidedFilterParams {\n    /**\n     * The values to display in the Filter List. If this is not set, the filter will takes its\n     * values from what is loaded in the table.\n     */\n    values?: SetFilterValues;\n    /**\n     * Refresh the values every time the Set filter is opened.\n     */\n    refreshValuesOnOpen?: boolean;\n    /** The height of values in the Filter List in pixels. */\n    cellHeight?: number;\n    /**\n     * If `true`, the Set Filter values will not be sorted. Use this if you are providing your own\n     * values and don't want them sorted as you are providing in the order you want.\n     * \n     * Default: `false`\n     */\n    suppressSorting?: boolean;\n    /**\n     * Similar to the Cell Renderer for the grid. Setting it separately here allows for the value to\n     * be rendered differently in the filter.\n     */\n    cellRenderer?: any;\n    /**\n     * @deprecated as of v27, use cellRenderer for Framework components also\n     * Similar to the Cell Renderer Comp for the grid. Setting it separately here allows for the value to\n     * be rendered differently in the filter.\n     */\n    cellRendererFramework?: any;\n    /**\n     * Set to `true` to hide the Mini Filter.\n     * \n     * Default: `false`\n     */\n    suppressMiniFilter?: boolean;\n    /**\n     * Set to `true` to apply the Set Filter immediately when the user is typing in the Mini Filter.\n     * \n     * Default: `false`\n     */\n    applyMiniFilterWhileTyping?: boolean;\n    /**\n     * Set to `true` to remove the Select All checkbox.\n     * Default: `false`\n     */\n    suppressSelectAll?: boolean;\n    /**\n     * By default, when the Set Filter is opened all values are shown selected. Set this to `true`\n     * to instead show all values as de-selected by default.\n     */\n    defaultToNothingSelected?: boolean;\n    /**\n     * Comparator for sorting. If not provided, the Column Definition comparator is used. If Column\n     * Definition comparator is also not provided, the default (grid provided) comparator is used.\n     */\n    comparator?: (a: any, b: any) => number;\n    /**\n     * If specified, this formats the text before applying the Mini Filter compare logic, useful for\n     * instance to substitute accented characters.\n     */\n    textFormatter?: (from: string) => string;\n    valueFormatter?: (params: ValueFormatterParams) => string;\n    /**\n     * If `true`, hovering over a value in the Set Filter will show a tooltip containing the full,\n     * untruncated value.\n     * \n     * Default: `false`\n     */\n    showTooltips?: boolean;\n    /**\n     * If `true`, enables case-sensitivity in the SetFilter Mini-Filter and Filter List.\n     * Default: `false`.\n     */\n    caseSensitive?: boolean;\n    /**\n     * Changes the behaviour of the Set Filter to match that of Excel's AutoFilter.\n     */\n    excelMode?: 'mac' | 'windows';\n}\n"]}