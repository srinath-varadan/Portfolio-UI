{"version":3,"sources":["../../../src/ts/rendering/cellEditors/popupEditorWrapper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,iEAA8D;AAE9D,mDAAsE;AACtE,mDAAsD;AAEtD,MAAa,kBAAmB,SAAQ,+BAAc;IAIlD,YAA6B,MAAyB;QAClD,KAAK,CAAC,UAAU,CAAA,8CAA8C,CAAC,CAAC;QADvC,WAAM,GAAN,MAAM,CAAmB;IAEtD,CAAC;IAGO,aAAa;QACjB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,kBAAkB,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;QACzG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEO,kBAAkB;QACtB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,MAAM,QAAQ,GAAG,CAAC,KAAoB,EAAE,EAAE;YACtC,IAAI,CAAC,yCAA8B,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;gBACnG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC3B;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;;AAtBa,+CAA4B,GAAG,oBAAoB,CAAC;AAOlE;IADC,uBAAa;uDAIb;AAZL,gDAyBC","file":"popupEditorWrapper.js","sourcesContent":["import { PopupComponent } from \"../../widgets/popupComponent\";\nimport { ICellEditorParams } from \"../../interfaces/iCellEditor\";\nimport { isUserSuppressingKeyboardEvent } from \"../../utils/keyboard\";\nimport { PostConstruct } from \"../../context/context\";\n\nexport class PopupEditorWrapper extends PopupComponent {\n\n    public static DOM_KEY_POPUP_EDITOR_WRAPPER = 'popupEditorWrapper';\n\n    constructor(private readonly params: ICellEditorParams) {\n        super(/* html */`<div class=\"ag-popup-editor\" tabindex=\"-1\"/>`);\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.gridOptionsWrapper.setDomData(this.getGui(), PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER, true);\n        this.addKeyDownListener();\n    }\n\n    private addKeyDownListener(): void {\n        const eGui = this.getGui();\n        const params = this.params;\n        const listener = (event: KeyboardEvent) => {\n            if (!isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, event, params.node, params.column, true)) {\n                params.onKeyDown(event);\n            }\n        };\n\n        this.addManagedListener(eGui, 'keydown', listener);\n    }\n}\n"]}