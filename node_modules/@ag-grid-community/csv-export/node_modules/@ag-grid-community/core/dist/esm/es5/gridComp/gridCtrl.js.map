{"version":3,"sources":["../../../src/ts/gridComp/gridCtrl.ts"],"names":[],"mappings":"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","file":"gridCtrl.js","sourcesContent":["import { Autowired, PostConstruct } from \"../context/context\";\nimport { GridApi } from \"../gridApi\";\nimport { FocusService } from \"../focusService\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { LayoutFeature, LayoutView } from \"../styling/layoutFeature\";\nimport { Events } from \"../eventKeys\";\nimport { ResizeObserverService } from \"../misc/resizeObserverService\";\nimport { GridSizeChangedEvent } from \"../events\";\nimport { ColumnApi } from \"../columns/columnApi\";\nimport { ColumnModel } from \"../columns/columnModel\";\nimport { CtrlsService } from \"../ctrlsService\";\nimport { MouseEventService } from \"../gridBodyComp/mouseEventService\";\nimport { last } from \"../utils/array\";\n\nexport interface IGridComp extends LayoutView {\n    setRtlClass(cssClass: string): void;\n    destroyGridUi(): void;\n    forceFocusOutOfContainer(up: boolean): void;\n    addOrRemoveKeyboardFocusClass(value: boolean): void;\n    getFocusableContainers(): HTMLElement[];\n    setCursor(value: string | null): void;\n    setUserSelect(value: string | null): void;\n}\n\nexport class GridCtrl extends BeanStub {\n\n    @Autowired('columnApi') private readonly columnApi: ColumnApi;\n    @Autowired('gridApi') private readonly gridApi: GridApi;\n    @Autowired('focusService') protected readonly focusService: FocusService;\n    @Autowired('resizeObserverService') private readonly resizeObserverService: ResizeObserverService;\n    @Autowired('columnModel') private readonly columnModel: ColumnModel;\n    @Autowired('ctrlsService') private readonly ctrlsService: CtrlsService;\n    @Autowired('mouseEventService') private readonly mouseEventService: MouseEventService;\n\n    private view: IGridComp;\n    private eGridHostDiv: HTMLElement;\n    private eGui: HTMLElement;\n\n    public setComp(view: IGridComp, eGridDiv: HTMLElement, eGui: HTMLElement): void {\n        this.view = view;\n        this.eGridHostDiv = eGridDiv;\n        this.eGui = eGui;\n\n        this.mouseEventService.stampTopLevelGridCompWithGridInstance(eGridDiv);\n\n        this.createManagedBean(new LayoutFeature(this.view));\n\n        // important to set rtl before doLayout, as setting the RTL class impacts the scroll position,\n        // which doLayout indirectly depends on\n        this.addRtlSupport();\n\n        this.addManagedListener(this, Events.EVENT_KEYBOARD_FOCUS, () => {\n            this.view.addOrRemoveKeyboardFocusClass(true);\n        });\n\n        this.addManagedListener(this, Events.EVENT_MOUSE_FOCUS, () => {\n            this.view.addOrRemoveKeyboardFocusClass(false);\n        });\n\n        const unsubscribeFromResize = this.resizeObserverService.observeResize(\n            this.eGridHostDiv, this.onGridSizeChanged.bind(this));\n        this.addDestroyFunc(() => unsubscribeFromResize());\n\n        this.ctrlsService.registerGridCtrl(this);\n    }\n\n    public isDetailGrid(): boolean {\n        const el = this.focusService.findTabbableParent(this.getGui());\n\n        return el?.getAttribute('row-id')?.startsWith('detail') || false;\n    }\n\n    public showDropZones(): boolean {\n        return ModuleRegistry.isRegistered(ModuleNames.RowGroupingModule);\n    }\n\n    public showSideBar(): boolean {\n        return ModuleRegistry.isRegistered(ModuleNames.SideBarModule);\n    }\n\n    public showStatusBar(): boolean {\n        return ModuleRegistry.isRegistered(ModuleNames.StatusBarModule);\n    }\n\n    public showWatermark(): boolean {\n        return ModuleRegistry.isRegistered(ModuleNames.EnterpriseCoreModule);\n    }\n\n    private onGridSizeChanged(): void {\n        const event: GridSizeChangedEvent = {\n            type: Events.EVENT_GRID_SIZE_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            clientWidth: this.eGridHostDiv.clientWidth,\n            clientHeight: this.eGridHostDiv.clientHeight\n        };\n        this.eventService.dispatchEvent(event);\n    }\n\n    private addRtlSupport(): void {\n        const cssClass = this.gridOptionsWrapper.isEnableRtl() ? 'ag-rtl' : 'ag-ltr';\n        this.view.setRtlClass(cssClass);\n    }\n\n    public destroyGridUi(): void {\n        this.view.destroyGridUi();\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui;\n    }\n\n    public setResizeCursor(on: boolean): void {\n        this.view.setCursor(on ? 'ew-resize' : null);\n    }\n\n    public disableUserSelect(on: boolean): void {\n        this.view.setUserSelect(on ? 'none' : null);\n    }\n\n    public focusNextInnerContainer(backwards: boolean): boolean {\n        const eDocument = this.gridOptionsWrapper.getDocument();\n        const focusableContainers = this.view.getFocusableContainers();\n        const idxWithFocus = focusableContainers.findIndex(container => container.contains(eDocument.activeElement));\n        const nextIdx = idxWithFocus + (backwards ? -1 : 1);\n\n        if (nextIdx <= 0 || nextIdx >= focusableContainers.length) {\n            return false;\n        }\n\n        return this.focusService.focusInto(focusableContainers[nextIdx]);\n    }\n\n    public focusInnerElement(fromBottom?: boolean) {\n        const focusableContainers = this.view.getFocusableContainers();\n\n        if (fromBottom) {\n            if (focusableContainers.length > 1) {\n                return this.focusService.focusInto(last(focusableContainers), true);\n            }\n\n            const lastColumn = last(this.columnModel.getAllDisplayedColumns());\n            if (this.focusService.focusGridView(lastColumn, true)) { return true; }\n        }\n\n        return this.focusService.focusFirstHeader();\n    }\n\n    public forceFocusOutOfContainer(up = false): void {\n        this.view.forceFocusOutOfContainer(up);\n    }\n\n}"]}